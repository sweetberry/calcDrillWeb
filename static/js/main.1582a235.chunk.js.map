{"version":3,"sources":["levels/level_9x9_lv01.ts","levels/level_9x9_lv01_hole.ts","levels/level_9x9_lv02.ts","levels/level_9x9_lv02_hole.ts","levels/level_9x9_lv03.ts","levels/level_9x9_lv03_hole.ts","levels/level_9x9_lv04.ts","levels/level_9x9_lv04_hole.ts","levels/level_9x9_lv05.ts","levels/level_9x9_lv05_hole.ts","levels/level_9x9_lv06.ts","levels/level_9x9_lv06_hole.ts","levels/level_9x9_lv07.ts","levels/level_9x9_lv07_hole.ts","levels/level_9x9_lv08.ts","levels/level_9x9_lv08_hole.ts","levels/level_9x9_lv09.ts","levels/level_9x9_lv09_hole.ts","levels/level_9x9_lv10.ts","levels/level_9x9_lv10_hole.ts","levels/allLevels.ts","common/repository.ts","common/i18n.ts","compornents/MenuListRow.tsx","compornents/useDimension.ts","assets/bt3.mp3","assets/bubuu.mp3","assets/hayaosi.mp3","assets/win1.mp3","assets/win2.mp3","assets/sel5.mp3","assets/stadiumcheer1.mp3","common/sounds.ts","compornents/StartModal.tsx","compornents/MenuList.tsx","compornents/QuestionCharacter.tsx","compornents/QuestionDisplay.tsx","compornents/useSolveProblem.ts","compornents/NumberPadButton.tsx","compornents/NumberPad.tsx","compornents/FailModal.tsx","compornents/SuccessModal.tsx","compornents/GameView.tsx","compornents/usePlayLavel.ts","compornents/ResultListRow.tsx","compornents/ResultList.tsx","compornents/ExitModal.tsx","compornents/LevelView.tsx","compornents/ShareModal.tsx","compornents/App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["questions","rightArray","forEach","leftTerm","rightTerm","number","rightHandSide","push","String","replace","level","replacePlaceholder","levels","level_9x9_lv01","level_9x9_lv01_hole","level_9x9_lv02","level_9x9_lv02_hole","level_9x9_lv03","level_9x9_lv03_hole","level_9x9_lv04","level_9x9_lv04_hole","level_9x9_lv05","level_9x9_lv05_hole","level_9x9_lv06","level_9x9_lv06_hole","level_9x9_lv07","level_9x9_lv07_hole","level_9x9_lv08","level_9x9_lv08_hole","level_9x9_lv09","level_9x9_lv09_hole","level_9x9_lv10","level_9x9_lv10_hole","Object","entries","key","value","title","Error","questionCount","saveLevelRecordAsync","levelID","newLevelRecord","Promise","resolve","localStorage","JSON","stringify","undefined","loadLevelRecordAsync","prevlevelRecord","parse","lastResult","bestResult","clearCount","i18n","init","fallbackLng","resources","subtag","navigator","language","script","lung_code","_","concat","filter","Boolean","join","changeLanguage","addResources","selections_addition","selections_subtraction","selections_multiplication","selections_division","menuList_record","menuList_lastResult","levelStartModal_messageB","levelStartModal_start","exitModal_really","exitModal_messageB","exitModal_escape","successModal_next","failModal_next","total","goodJob","congratulations","sec","complete","newRecord","youDidIt","goldMedal","silverMedal","bronzeMedal","withInClear","playTogether","MenuListRow","description","levelRecord","t","getResultString","result","totalCount","successCount","totalDuration","Row","className","Col","xs","sm","style","fontSize","children","whiteSpace","format","timestamp","locale","ja","useDimension","ref","useState","width","height","dimensions","setDimensions","useEffect","testDimensions","current","offsetWidth","offsetHeight","movement_timer","handleResize","clearInterval","setTimeout","window","addEventListener","removeEventListener","pressSound","Howl","src","pressSoundSrc","volume","failSound","failSoundSrc","successSound","successSoundSrc","hideSound","hideSoundSrc","openSound","openSoundSrc","resultSound","resultSoundSrc","cheerSound","cheerSoundSrc","StartModal","isShow","onClickStart","onClickCancel","handleClose","play","message","Modal","size","show","onHide","onEntering","centered","dialogClassName","keyboard","contentClassName","backdropClassName","Card","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","icon","faTimesCircle","onClick","borderBottomRightRadius","Button","color","faPlayCircle","MenuList","startLevel","menuItems","setMenuItems","targetRefRoot","useRef","rootDimensions","isSm","setIsSm","tempClassName","selectedLevel","setSelectedLevel","startModalTitle","startModalDescription","unmounted","a","all","map","_menuItems","Container","ListGroup","item","Item","action","QuestionCharacter","status","text","tempBorderWidth","borderColor","borderWidth","isFail","borderRadius","position","marginLeft","display","opacity","faTimes","border","fontFamily","fontWeight","textAlign","lineHeight","QuestionDisplay","characters","flexDirection","alignItems","character","uuid","getCurrentCharactersAndProblemStatus","question","inputNumbers","currentInputs","answerCharacters","Array","from","answer","string","parseInt","newProblemStatus","currentCharacters","problem","characterString","length","currentAnswerCharacter","shift","currentInputNumber","isInputSameCountAsAnswer","problemStatus","NumberPadButton","onPress","radius","props","isActive","setIsActive","_backgroundColor","_color","marginBottom","padding","background","borderTop","boxShadow","content","left","right","top","bottom","backgroundColor","backgroundImage","onMouseDown","onMouseUp","onMouseLeave","textShadow","colorDict","NumberPad","margin","paddingTop","justifyContent","FailModal","onClickNext","faArrowRight","SuccessModal","faCheckCircle","GameView","logging","problemLog","console","log","isFailModalShow","setIsFailModalShow","isSuccessModalShow","setIsSuccessModalShow","zoom","setZoom","prevQuestion","setPrevQuestion","setInputNumbers","Date","now","startTime","setStartTime","num","newNumbers","duration","useSolveProblem","handleNext","heightRatio","widthRatio","Math","min","createQuestions","_questions","_questionCount","sortedQuestions","rank","Number","sort","b","row","array","i","k","floor","random","shuffleArray","splice","usePlayLevel","setQuestions","setStatus","currentQuestion","setCurrentQuestion","problemLogs","setProblemLogs","newQuestion","prevCorrectCount","writeGlobalReport","ResultListRow","durationColor","evaluateLevelRecord","reduce","acc","isComplete","prevBestResult","isNewRecord","ResultList","exitLevel","targetRefTail","state","setState","scrollIntoView","behavior","minHeight","confettiSource","x","y","w","h","recycle","borderTopWidth","borderStyle","transform","faMugHot","faThumbsUp","ExitModal","onClickExit","really","backdrop","faRunning","LevelView","isShowExistModal","setIsShowExistModal","zIndex","ShareModal","shareModal_next","alt","process","App","playingLevelID","setPlayingLevelID","isShowShareModal","setIsShowShareModal","faQrcode","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"iSAEMA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,EAPD,CACV,MAAS,SACT,YAAe,gBACf,cAAiB,EACjBV,aC/BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,EAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,EAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,EAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,EAPD,CACV,MAAS,SACT,YAAe,oCACf,cAAiB,GACjBV,aC3BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,EAPD,CACV,MAAS,SACT,YAAe,gBACf,cAAiB,EACjBV,aC/BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,EAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,EAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,EAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,EAPD,CACV,MAAS,SACT,YAAe,oCACf,cAAiB,GACjBV,aC3BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,EAPD,CACV,MAAS,SACT,YAAe,gBACf,cAAiB,EACjBV,aC/BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,EAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,EAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,EAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,EAPD,CACV,MAAS,SACT,YAAc,oCACd,cAAiB,GACjBV,aC3BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,EAPD,CACV,MAAS,SACT,YAAc,gBACd,cAAiB,EACjBV,aC/BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,EAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,EAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,EAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,EAPD,CACV,MAAS,SACT,YAAc,oCACd,cAAiB,GACjBV,aC3BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,EAPD,CACV,MAAS,SACT,YAAc,gBACd,cAAiB,EACjBV,aC/BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,EAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,EAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,EAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,EAPD,CACV,MAAS,UACT,YAAc,oCACd,cAAiB,GACjBV,aC3BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,EAPD,CACV,MAAS,UACT,YAAc,gBACd,cAAiB,EACjBV,aC/BEA,EAAwB,GAExBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,GAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,EAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,GAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,EAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,GAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,GAPD,CACV,MAAS,UACT,YAAc,oCACd,cAAiB,GACjBV,aC3BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,GAPD,CACV,MAAS,UACT,YAAe,gBACf,cAAiB,EACjBV,cC/BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,GAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,GAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,GAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,GAPD,CACV,MAAS,UACT,YAAe,oCACf,cAAiB,GACjBV,cC3BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,GAPD,CACV,MAAS,UACT,YAAe,gBACf,cAAiB,EACjBV,cC/BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,GAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,GAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,GAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,GAPD,CACV,MAAS,UACT,YAAe,oCACf,cAAiB,GACjBV,cC3BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,GAQTC,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,GAPD,CACV,MAAS,UACT,YAAe,gBACf,cAAiB,EACjBV,cC/BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,GAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,GAQTP,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,GAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,GAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UAKtB,IAOeM,GAPD,CACV,MAAS,UACT,YAAe,oCACf,cAAiB,GACjBV,cC3BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAD1B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAQjCC,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IANoBC,EAMdC,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BC,EAA1B,aARgBC,EAQ0CC,EAP3DE,OAAOH,GAAQI,QAAQ,SAAU,OAQhC,OAAUH,UAatB,IAOeI,GAPD,CACV,MAAS,UACT,YAAe,wBACf,cAAiB,GACjBV,cC/BEA,GAAwB,GAExBC,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGtCU,GAAqB,SAACN,GACxB,OAAOG,OAAOH,GAAQI,QAAQ,SAAU,MAL1B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAQjCP,SAAQ,SAACC,GACfF,GAAWC,SAAQ,SAACE,GAChB,IAAME,EAAgBH,EAAWC,EACjCJ,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcI,GAAmBR,GAAjC,YAA8CC,EAA9C,YAA2DE,GAC3D,OAAUH,IAEdH,GAAUO,KAAK,CACX,QAAU,GAAV,OAAcJ,EAAd,YAA0BQ,GAAmBP,GAA7C,YAA2DE,GAC3D,OAAUF,UCyBtB,IDpBA,ICHMQ,GAAS,CACXC,iBACAC,sBACAC,iBACAC,sBACAC,iBACAC,sBACAC,iBACAC,sBACAC,iBACAC,sBACAC,iBACAC,uBACAC,kBACAC,uBACAC,kBACAC,uBACAC,kBACAC,uBACAC,kBACAC,oBDjBU,CACV,MAAS,UACT,YAAe,4CACf,cAAiB,GACjBhC,eCgBJ,QAA2BiC,OAAOC,QAAQtB,IAA1C,kBAAmD,CAAC,IAAD,yBAAvCuB,GAAuC,MAAlCC,GAAkC,MAC/C,IAAKA,GAAMC,MACX,MAAM,IAAIC,MAAJ,qCAAwCH,KAE9C,IAAKC,GAAMG,cACP,MAAM,IAAID,MAAJ,6CAAgDH,KChDvD,IAAMK,GAAuB,SAACC,EAAiBC,GAClD,OAAO,IAAIC,SAAQ,SAACC,GAChBC,aAAaJ,GAAWK,KAAKC,UAAUL,GACvCE,OAAQI,OAIHC,GAAuB,SAACR,GACjC,OAAO,IAAIE,SAAQ,SAACC,GAChB,IAAMM,EAAmBL,aAAaJ,GAAYK,KAAKK,MAAMN,aAAaJ,IAAY,KACtFG,EAAQ,CACJQ,WAAaF,EAAmBA,EAAgBE,WAAa,KAC7DC,WAAaH,EAAmBA,EAAgBG,WAAa,KAC7DC,WAAaJ,EAAmBA,EAAgBI,WAAa,Q,kECXzEC,KAAKC,KACD,CACEC,YAAa,KACbC,UAAa,K,OAGQC,KAAQC,UAAUC,UAAtCA,G,GAAAA,SAAUC,G,GAAAA,OACXC,GAAYC,KAAEC,OAAQ,CAACJ,GAAUC,KAAUI,OAAQC,SAAUC,KAAM,KAEzEb,KAAKc,eAAgBN,IAErBR,KAAKe,aAAc,KAAM,cAAe,CAACC,oBAAqB,aAC9DhB,KAAKe,aAAc,KAAM,cAAe,CAACC,oBAAqB,uBAC9DhB,KAAKe,aAAc,KAAM,cAAe,CAACC,oBAAqB,eAE9DhB,KAAKe,aAAc,KAAM,cAAe,CAACE,uBAAwB,gBACjEjB,KAAKe,aAAc,KAAM,cAAe,CAACE,uBAAwB,uBACjEjB,KAAKe,aAAc,KAAM,cAAe,CAACE,uBAAwB,mBAEjEjB,KAAKe,aAAc,KAAM,cAAe,CAACG,0BAA2B,mBACpElB,KAAKe,aAAc,KAAM,cAAe,CAACG,0BAA2B,uBACpElB,KAAKe,aAAc,KAAM,cAAe,CAACG,0BAA2B,sBAEpElB,KAAKe,aAAc,KAAM,cAAe,CAACI,oBAAqB,aAC9DnB,KAAKe,aAAc,KAAM,cAAe,CAACI,oBAAqB,uBAC9DnB,KAAKe,aAAc,KAAM,cAAe,CAACI,oBAAqB,gBAE9DnB,KAAKe,aAAc,KAAM,cAAe,CAACK,gBAAiB,WAC1DpB,KAAKe,aAAc,KAAM,cAAe,CAACK,gBAAiB,mCAC1DpB,KAAKe,aAAc,KAAM,cAAe,CAACK,gBAAiB,WAE1DpB,KAAKe,aAAc,KAAM,cAAe,CAACM,oBAAqB,gBAC9DrB,KAAKe,aAAc,KAAM,cAAe,CAACM,oBAAqB,6BAC9DrB,KAAKe,aAAc,KAAM,cAAe,CAACM,oBAAqB,qBAE9DrB,KAAKe,aAAc,KAAM,cAAe,CAACO,yBAA0B,mBACnEtB,KAAKe,aAAc,KAAM,cAAe,CAACO,yBAA0B,yBACnEtB,KAAKe,aAAc,KAAM,cAAe,CAACO,yBAA0B,wBAEnEtB,KAAKe,aAAc,KAAM,cAAe,CAACQ,sBAAuB,WAChEvB,KAAKe,aAAc,KAAM,cAAe,CAACQ,sBAAuB,8BAChEvB,KAAKe,aAAc,KAAM,cAAe,CAACQ,sBAAuB,aAEhEvB,KAAKe,aAAc,KAAM,cAAe,CAACS,iBAAkB,YAC3DxB,KAAKe,aAAc,KAAM,cAAe,CAACS,iBAAkB,mCAC3DxB,KAAKe,aAAc,KAAM,cAAe,CAACS,iBAAkB,eAE3DxB,KAAKe,aAAc,KAAM,cAAe,CAACU,mBAAoB,wBAC7DzB,KAAKe,aAAc,KAAM,cAAe,CAACU,mBAAoB,qDAC7DzB,KAAKe,aAAc,KAAM,cAAe,CAACU,mBAAoB,8BAE7DzB,KAAKe,aAAc,KAAM,cAAe,CAACW,iBAAkB,WAC3D1B,KAAKe,aAAc,KAAM,cAAe,CAACW,iBAAkB,iBAC3D1B,KAAKe,aAAc,KAAM,cAAe,CAACW,iBAAkB,YAE3D1B,KAAKe,aAAc,KAAM,cAAe,CAACY,kBAAmB,SAC5D3B,KAAKe,aAAc,KAAM,cAAe,CAACY,kBAAmB,iBAC5D3B,KAAKe,aAAc,KAAM,cAAe,CAACY,kBAAmB,cAE5D3B,KAAKe,aAAc,KAAM,cAAe,CAACa,eAAgB,gBACzD5B,KAAKe,aAAc,KAAM,cAAe,CAACa,eAAgB,wBACzD5B,KAAKe,aAAc,KAAM,cAAe,CAACa,eAAgB,qBAEzD5B,KAAKe,aAAc,KAAM,cAAe,CAACc,MAAO,UAChD7B,KAAKe,aAAc,KAAM,cAAe,CAACc,MAAO,iBAChD7B,KAAKe,aAAc,KAAM,cAAe,CAACc,MAAO,UAEhD7B,KAAKe,aAAc,KAAM,cAAe,CAACe,QAAS,cAClD9B,KAAKe,aAAc,KAAM,cAAe,CAACe,QAAS,0CAClD9B,KAAKe,aAAc,KAAM,cAAe,CAACe,QAAS,kBAElD9B,KAAKe,aAAc,KAAM,cAAe,CAACgB,gBAAiB,qBAC1D/B,KAAKe,aAAc,KAAM,cAAe,CAACgB,gBAAiB,oCAC1D/B,KAAKe,aAAc,KAAM,cAAe,CAACgB,gBAAiB,iBAE1D/B,KAAKe,aAAc,KAAM,cAAe,CAACiB,IAAK,QAC9ChC,KAAKe,aAAc,KAAM,cAAe,CAACiB,IAAK,WAC9ChC,KAAKe,aAAc,KAAM,cAAe,CAACiB,IAAK,MAE9ChC,KAAKe,aAAc,KAAM,cAAe,CAACkB,SAAU,cACnDjC,KAAKe,aAAc,KAAM,cAAe,CAACkB,SAAU,8BACnDjC,KAAKe,aAAc,KAAM,cAAe,CAACkB,SAAU,eAEnDjC,KAAKe,aAAc,KAAM,cAAe,CAACmB,UAAW,gBACpDlC,KAAKe,aAAc,KAAM,cAAe,CAACmB,UAAW,oCACpDlC,KAAKe,aAAc,KAAM,cAAe,CAACmB,UAAW,kBAEpDlC,KAAKe,aAAc,KAAM,cAAe,CAACoB,SAAU,gBACnDnC,KAAKe,aAAc,KAAM,cAAe,CAACoB,SAAU,8BACnDnC,KAAKe,aAAc,KAAM,cAAe,CAACoB,SAAU,oBAEnDnC,KAAKe,aAAc,KAAM,cAAe,CAACqB,UAAW,eACpDpC,KAAKe,aAAc,KAAM,cAAe,CAACqB,UAAW,6BACpDpC,KAAKe,aAAc,KAAM,cAAe,CAACqB,UAAW,mBAEpDpC,KAAKe,aAAc,KAAM,cAAe,CAACsB,YAAa,iBACtDrC,KAAKe,aAAc,KAAM,cAAe,CAACsB,YAAa,6BACtDrC,KAAKe,aAAc,KAAM,cAAe,CAACsB,YAAa,qBAEtDrC,KAAKe,aAAc,KAAM,cAAe,CAACuB,YAAa,iBACtDtC,KAAKe,aAAc,KAAM,cAAe,CAACuB,YAAa,6BACtDtC,KAAKe,aAAc,KAAM,cAAe,CAACuB,YAAa,sBAEtDtC,KAAKe,aAAc,KAAM,cAAe,CAACwB,YAAa,8BACtDvC,KAAKe,aAAc,KAAM,cAAe,CAACwB,YAAa,uDACtDvC,KAAKe,aAAc,KAAM,cAAe,CAACwB,YAAa,gCAEtDvC,KAAKe,aAAc,KAAM,cAAe,CAACyB,aAAc,yBACvDxC,KAAKe,aAAc,KAAM,cAAe,CAACyB,aAAc,sDACvDxC,KAAKe,aAAc,KAAM,cAAe,CAACyB,aAAc,yB,iCCpG1CC,GAA0C,SAAC,GAAuC,IAAtC3D,EAAqC,EAArCA,MAAO4D,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YACnEX,EAAMhC,KAAK4C,EAAE,OACbxB,EAAkBpB,KAAK4C,EAAE,mBACzBvB,EAAsBrB,KAAK4C,EAAE,uBAC5B/C,EAA0B8C,EAA1B9C,WAAYC,EAAc6C,EAAd7C,WAGb+C,EAAkB,SAACC,GAErB,OADoBA,EAAOC,aAAeD,EAAOE,aAC5BF,EAAOG,cAAgB,IAAOjB,EAAjC,UAA0Cc,EAAOE,aAAjD,YAAiEF,EAAOC,aAG9F,OAEI,cADA,CACCG,GAAA,EAAD,CACIC,UAAW,+CADf,UAEI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,eAACJ,GAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,EAAGH,UAAW,QAA9B,UACI,cAACC,GAAA,EAAD,CAAKD,UAAS,4BAAd,SACI,8BACI,qBAAKA,UAAW,mBAAoBI,MAAO,CAACC,SAAU,SAAUC,SAAU3E,QAGlF,cAACsE,GAAA,EAAD,UACI,qBAAKD,UAAS,yDAAd,SACI,qBAAKI,MAAO,CAACG,WAAY,YAAaD,SAAUf,aAMhE,cAACU,GAAA,EAAD,UACI,eAACF,GAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,EAAhB,UACI,cAACF,GAAA,EAAD,CACID,UAAS,6CADb,SAEKrD,GACD,sBAAKqD,UAAW,GAAhB,UACE,8BAAM/B,EAAkB,KAAOyB,EAAgB/C,KAC/C,qBAAKqD,UAAW,wBAAhB,SACE,uBAAOM,SAAUE,aAAO7D,EAAW8D,UAAW,IAAK,CAACC,OAAQC,gBAIpE,cAACV,GAAA,EAAD,CACID,UAAS,wCADb,SAEKtD,GACD,sBAAKsD,UAAW,GAAhB,UACE,8BAAM9B,EAAsB,KAAOwB,EAAgBhD,KACnD,qBAAKsD,UAAW,wBAAhB,SACE,uBAAOM,SAAUE,aAAO9D,EAAW+D,UAAW,OAAQ,CAACC,OAAQC,yBC5DpF,SAASC,GAAaC,GAAoC,IAAD,EACxBC,mBAAS,CAACC,MAAO,EAAGC,OAAQ,IADJ,mBACrDC,EADqD,KACzCC,EADyC,KAuB5D,OApBAC,qBAAU,WACN,IAAMC,EAAiB,WACfP,EAAIQ,SACJH,EAAc,CACVH,MAAOF,EAAIQ,QAAQC,YACnBN,OAAQH,EAAIQ,QAAQE,gBAI5BC,EAAsB,KAEpBC,EAAe,WACjBC,cAAcF,GACdA,EAAiBG,WAAWP,EAdd,MAkBlB,OAFAQ,OAAOC,iBAAiB,SAAUJ,GAClCL,IACO,kBAAMQ,OAAOE,oBAAoB,SAAUL,MAEnD,CAACZ,IACGI,E,8ECzBI,OAA0B,gCCA1B,OAA0B,kCCA1B,OAA0B,oCCA1B,OAA0B,iCCA1B,OAA0B,iCCA1B,OAA0B,iCCA1B,OAA0B,0CCkB5Bc,GAAa,IAAIC,QAAK,CAC/BC,IAAK,CACDC,MAELC,OAAO,IAEGC,GAAY,IAAIJ,QAAK,CAC9BC,IAAK,CACDI,MAIKC,GAAe,IAAIN,QAAK,CACjCC,IAAK,CACDM,MAIKC,GAAY,IAAIR,QAAK,CAC9BC,IAAK,CACDQ,MAIKC,GAAY,IAAIV,QAAK,CAC9BC,IAAK,CACDU,MAIKC,GAAc,IAAIZ,QAAK,CAChCC,IAAK,CACDY,MAIKC,GAAa,IAAId,QAAK,CAC/BC,IAAK,CACDc,MCrCKC,GAAwC,SAAC,GAMO,IAAD,IALFC,cAKE,aAJFtH,aAIE,MAJM,GAIN,MAHF4D,mBAGE,MAHY,GAGZ,EAFF2D,EAEE,EAFFA,aACAC,EACE,EADFA,cAGhDC,EAAc,WAChBrB,GAAWsB,OACXF,KAWE/E,EAAwBvB,KAAK4C,EAAE,yBAC/B6D,EAAUzG,KAAK4C,EAAE,4BAEvB,OACI,eAAC8D,GAAA,EAAD,CACIC,KAAM,KACNC,KAAMR,EACNS,OAAQN,EACRO,WAZe,WACnBjB,GAAUW,QAaNO,UAAQ,EACRC,gBAAiB,eACjBC,UAAU,EACVC,iBAAkB,2CAClBC,kBAAmB,UAVvB,UAYI,eAACC,GAAA,EAAD,CACIjE,UAAW,8BACXI,MAAO,CACH8D,oBApBK,GAqBLC,qBArBK,IAiBb,UAOI,mBACInE,UAAW,gCACXM,SAAU3E,IAEd,mBACIqE,UAAW,2BACXI,MAAO,CAACG,WAAY,YACpBD,SAAUf,IAEd,mBACIS,UAAW,8CACXM,SAAUgD,OAIlB,sBACItD,UAAW,kBADf,UAGI,qBACIA,UAAW,+DACXI,MAAO,CACHgE,uBA7CC,IA0CT,SAKI,cAAC,KAAD,CACIpE,UAAW,aACXqE,KAAMC,KACNd,KAAM,KACNe,QAASnB,MAGjB,qBACIpD,UAAW,yCACXI,MAAO,CACHoE,wBAzDC,IAsDT,SAKI,eAACC,GAAA,EAAD,CACIzE,UAAW,sBACX0E,MAAM,UACNlB,KAAM,KACNe,QAvEA,WAChBxC,GAAWsB,OACXH,KAiEY,UAMI,cAAC,KAAD,CACIlD,UAAW,OACXqE,KAAMM,OAETvG,cClFlB,IAAMwG,GAAoC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAC7B/D,mBAAc,IADe,mBACxDgE,EADwD,KAC7CC,EAD6C,KAGzDC,EAAgBC,iBAAuB,MACvCC,EAAiBtE,GAAaoE,GAJ2B,EAMvClE,oBAAS,GAN8B,mBAMxDqE,EANwD,KAMlDC,EANkD,KAQzDC,EAAgBF,EAAO,YAAc,OARoB,EAUrBrE,mBAAwB,MAVH,mBAUxDwE,EAVwD,KAUzCC,EAVyC,KAmBzDC,EAAkBF,EAAgBpL,GAAOoL,GAAe3J,MAAQ,OAEhE8J,EAAwBH,EAAgBpL,GAAOoL,GAAe/F,YAAc,OAoBlF,OAlBA4B,qBAAU,WACNiE,EAAQF,EAAenE,MAAQ,OAChC,CAACmE,IAEJ/D,qBAAU,WACN,IAAIuE,GAAY,EAQhB,OAPA,sBAAC,4BAAAC,EAAA,sEA9CE1J,QAAQ2J,IAAIrK,OAAOC,QAAQtB,IAAQ2L,IAAvB,iBAAAtK,OAAA,IAAAA,CAAA,UAA2B,qCAAAoK,EAAA,gFAAQlK,EAAR,KAAaC,EAAb,KACpCK,EAAUN,EAD0B,SAEhBc,GAAqBR,GAFL,cAEpCyD,EAFoC,yBAGlC,CACJzD,UACAJ,MAAOD,EAAMC,MACb4D,YAAa7D,EAAM6D,YACnBC,gBAPsC,2CAA3B,wDA8Cd,OACSsG,EADT,OAEQJ,GACDX,EAAae,GAHpB,0CAAD,GAOO,WACHJ,GAAY,KAEjB,IAGC,eAACK,EAAA,EAAD,CAAWlF,IAAKmE,EAAhB,UACI,cAAC,GAAD,CACI/B,SAAUqC,EACV3J,MAAO6J,EACPjG,YAAakG,EACbvC,aAAc,WACN2B,GAAcS,GACdT,EAAWS,IAGnBnC,cArCc,WACtBoC,EAAiB,SAuCb,cAACS,EAAA,EAAD,UACKlB,EAAUe,KAAI,SAACI,GACZ,OAAQ,cAACD,EAAA,EAAUE,KAAX,CAAgBC,QAAM,EACNnG,UAAWqF,EAEXd,QAAS,WAhD1B,IAACxI,IAiDmCkK,EAAKlK,QAhD5DwJ,EAAiBxJ,IA4CG,SAQJ,cAAC,GAAD,CAEIJ,MAAOsK,EAAKtK,MACZ4D,YAAa0G,EAAK1G,YAClBC,YAAayG,EAAKzG,aAHbyG,EAAKlK,UAPWkK,EAAKlK,kB,SChEzCqK,GAAsD,SAAC,GAIO,IAAD,IAHF5C,YAGE,MAHK,GAGL,EAFF6C,EAEE,EAFFA,OAEE,IADFC,YACE,MADK,IACL,EAEhEC,EAAyB,GAAP/C,EAClBgD,EAAeH,EAFH,CAAC,MAAS,aAAc,KAAQ,MAAO,QAAW,SAE3BA,GAAU,aAC7CI,EAAeJ,EAAUE,EAAkB,EAC3CG,EAAoB,SAAXL,EAQf,MAPa,MAATC,IACAA,EAAO,KAEE,MAATA,IACAA,EAAO,QAIP,sBACItG,UAAW,mBACXI,MAAO,CACHW,MAAM,GAAD,OAAY,GAAPyC,EAAL,MACLxC,OAAO,GAAD,OAAKwC,EAAL,MACNmD,aAAa,GAAD,OAAY,IAAPnD,EAAL,MACZoD,SAAU,WACVC,YAAaN,EACbO,QAAS,eACTpC,MAAO,cATf,UAYKgC,GAAU,qBACP1G,UAAW,iFACXI,MAAO,CAAC2G,QAAQ,IAFT,SAIT,cAAC,KAAD,CACIrC,MAAO,MACPL,KAAM2C,KACNxD,KAAM,SAIZ,qBAAKpD,MAAO,CACRwG,SAAU,WACV7F,MAAO,OACPC,OAAQ,OACR2F,aAAa,GAAD,OAAY,IAAPnD,EAAL,MACZyD,OAAO,SAAD,OAAWR,EAAX,cAA4BD,GAClCA,YAAaA,EACbO,QAAS,MAEb,qBAAK3G,MAAO,CACRY,OAAO,GAAD,OAAKwC,EAAL,OADV,SAGI,qBACIpD,MAAO,CACH8G,WAAY,YACZC,WAAY,OACZC,UAAW,SACXC,WAAW,GAAD,OAAY,KAAP7D,EAAL,MACVnD,SAAS,GAAD,OAAY,GAAPmD,EAAL,OANhB,SAUK8C,U,SCrERgB,GAAkD,SAAC,GAKO,IAAD,IAJF9D,YAIE,MAJK,GAIL,MAHF+D,kBAGE,MAHW,GAGX,MAFFnH,aAEE,MAFM,GAEN,MADFJ,iBACE,MADU,GACV,EAElE,OACI,qBACIA,UAAWA,EACXI,MAAK,6BACEA,GADF,IAED0G,QAAS,OACTU,cAAe,MACfC,WAAY,WANpB,SAQKF,EAAW1B,KAAI,SAAC6B,GACb,OACI,cAAC,GAAD,CAEIlE,KAAMA,EACN8C,KAAMoB,EAAUpB,KAChBD,OAAQqB,EAAUrB,QAHbsB,sB,SC/BtB,SAASC,GAAqCC,EAAoBC,GACrE,IAAMC,EAAa,aAAOD,GACpBE,EAAmBC,MAAMC,KAAKpO,OAAO+N,EAASM,SAAStC,KAAI,SAACuC,GAC9D,OAAOC,SAASD,MAEhBE,EAAkC,KAEhCC,EAAiCN,MAAMC,KAAKL,EAASW,SAAS3C,KAAI,SAAC4C,GACrE,IAAInC,EACAD,EACJ,GAAwB,MAApBoC,EACAnC,EAAOmC,EACPpC,EAAS,UACN,GAAK2B,EAAiBU,OAItB,CACH,IAAMC,EAAyBX,EAAiBY,QAC1CC,EAAqBd,EAAca,aACdtM,IAAvBuM,GACAvC,EAAO,IACPD,EAAS,SACFsC,IAA2BE,GAClCvC,EAAOxM,OAAO+O,GACdxC,EAAS,YAETC,EAAOxM,OAAO+O,GACdxC,EAAS,OACTiC,EAAmB,aAfvBhC,EAAO,IACPD,EAAS,OACTiC,EAAmB,OAiBvB,MAAO,CAAChC,OAAMD,aAIlB,GAAyB,OAArBiC,EAA2B,CAC3B,IAAMQ,EAA2BhB,EAAaY,SAAWT,MAAMC,KAAKpO,OAAO+N,EAASM,SAASO,OAEzFJ,EADAQ,EACmB,UAEA,UAGvBR,EAAmB,OAEvB,MAAO,CAACC,oBAAmBQ,cAAeT,G,aCzBjCU,GAAkD,SAAC,GAMO,IAAD,IALFrP,cAKE,MALO,IAKP,MAJF+K,aAIE,MAJM,OAIN,EAHFuE,EAGE,EAHFA,QAGE,IAFFC,cAEE,MAFO,GAEP,EADCC,EACD,wDAClCrI,oBAAS,GADyB,mBAC3DsI,EAD2D,KACjDC,EADiD,KAU5DC,EAAoBF,EAAY,aAAe1E,EAC/C6E,EAAUH,EAAY1E,EAAQ,aAGpC,OACI,sBAAK1E,UAAW,GACXI,MAAO,CACHoJ,aAAa,OACbzI,MAAM,GAAD,OAAKmI,EAAL,MACLlI,OAAO,GAAD,OAAKkI,EAAL,MACNO,QAAS,EACT3C,QAAS,eACTF,SAAU,YAPnB,UAUI,qBAAKxG,MAAO,CACRsJ,WAAYH,EACZI,UAAW,iBACXhD,aAAc,MACdiD,UAAW,wBACXC,QAAS,GACT/C,QAAS,QACTF,SAAU,WACVkD,KAAK,IAAD,OAAMZ,EAAS,EAAf,MACJa,MAAM,IAAD,OAAMb,EAAS,EAAf,MACLc,IAAI,IAAD,OAAMd,EAAS,EAAf,MACHe,OAAO,IAAD,OAAMf,EAAS,EAAf,SAIV,cAACzE,GAAA,EAAD,2BACIrE,MAAO,CACH8J,gBAAiBZ,EACjB3C,aAAa,GAAD,OAAKuC,EAAS,EAAd,MACZnI,MAAM,GAAD,OAAKmI,EAAL,MACLlI,OAAO,GAAD,OAAKkI,EAAL,MACNxE,MAAO6E,EACPlJ,SAAS,GAAD,OAAM6I,EAAS,EAAf,MACR/B,WAAY,OACZC,UAAW,SACXC,WAAW,GAAD,OAAK6B,EAAS,EAAd,MACVzC,YAAa,EACb0D,gBAAiB,kDACjBP,UAAW,2DACXhD,SAAU,YAEdwD,YAAa,WACTf,GAAY,GArDxBtH,GAAWsB,OAEP4F,GACAA,EAAQtP,IAqDJ0Q,UAAW,WACPhB,GAAY,IAEhBiB,aAAc,WACVjB,GAAY,KAEZF,GA1BR,aA2BI,sBAAM/I,MAAO,CACTmK,WAAYnB,EAAW,iCAAmC,wCAD9D,SAGqBzP,WC3F/B6Q,GACE,wBADFA,GAEC,UAFDA,GAGC,UAHDA,GAIC,UAJDA,GAKC,UALDA,GAMC,UANDA,GAOC,UAPDA,GAQC,UARDA,GASC,UATDA,GAUC,UAVDA,GAWC,UAIMC,GAAsC,SAAC,GAGO,IAFHxB,EAEE,EAFFA,QAEE,IADF7I,aACE,MADM,GACN,EACtD,OACI,sBACIA,MAAK,6BACEA,GADF,IAED8J,gBAAiBM,GACjBrG,qBAAsB,GACtBD,oBAAqB,GACrBnD,MAAO,QACP0I,QAAS,EACTiB,OAAQ,EACRC,WAAY,SATpB,UAWI,eAAC5K,GAAA,EAAD,CAAKK,MAAO,CACRwK,eAAgB,eAChBnD,WAAY,SACZiD,OAAQ,GAHZ,UAKI,cAAC,GAAD,CACI/Q,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,IAEb,cAAC,GAAD,CACItP,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,IAEb,cAAC,GAAD,CACItP,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,OAIjB,eAAClJ,GAAA,EAAD,CAAKK,MAAO,CACRwK,eAAgB,eAChBnD,WAAY,SACZiD,OAAQ,GAHZ,UAKI,cAAC,GAAD,CACI/Q,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,IAGb,cAAC,GAAD,CACItP,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,IAGb,cAAC,GAAD,CACItP,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,OAIjB,eAAClJ,GAAA,EAAD,CAAKK,MAAO,CACRwK,eAAgB,eAChBnD,WAAY,SACZiD,OAAQ,GAHZ,UAKI,cAAC,GAAD,CACI/Q,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,IAGb,cAAC,GAAD,CACItP,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,IAGb,cAAC,GAAD,CACItP,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,OAIjB,cAAClJ,GAAA,EAAD,CAAKK,MAAO,CACRwK,eAAgB,eAChBnD,WAAY,SACZiD,OAAQ,GAHZ,SAKI,cAAC,GAAD,CACI/Q,OAAQ,IACR+K,MAAO8F,GACPvB,QAASA,UCvGhB4B,GAAsC,SAAC,GAGO,IAAD,IAFF5H,cAEE,SADF6H,EACE,EADFA,YAE9C1H,EAAc,WAChBrB,GAAWsB,OACXyH,KAQEtM,EAAoB3B,KAAK4C,EAAE,kBAKjC,OACI,eAAC8D,GAAA,EAAD,CACIC,KAAM,KACNC,KAAMR,EACNS,OAAQN,EACRO,WAfe,WACnBvB,GAAUiB,QAgBNO,UAAQ,EACRC,gBAAiB,eACjBC,UAAU,EACVC,iBAAkB,2CAClBC,kBAAmB,UAVvB,UAaI,cAACC,GAAA,EAAD,CACIjE,UAAW,gFACXI,MAAO,CACH8D,oBAvBK,GAwBLC,qBAxBK,IAoBb,SAOI,cAAC,KAAD,CACIX,KAAM,KACNxD,UAAW,GACXqE,KAAMC,SAGd,qBACItE,UAAW,yCACXI,MAAO,CACHgE,uBApCK,GAqCLI,wBArCK,IAiCb,SAMI,eAACC,GAAA,EAAD,CACIzE,UAAW,sBACX0E,MAAM,UACNlB,KAAM,KACNe,QAASnB,EAJb,UAMI,cAAC,KAAD,CACIpD,UAAW,OACXqE,KAAM0G,OAETvM,WC9DRwM,GAA4C,SAAC,GAGO,IAAD,IAFF/H,cAEE,SADF6H,EACE,EADFA,YAEpD1H,EAAc,WAChBrB,GAAWsB,OACXyH,KAMEtM,EAAoB3B,KAAK4C,EAAE,qBAEjC,OACI,eAAC8D,GAAA,EAAD,CACIC,KAAM,KACNC,KAAMR,EACNS,OAAQN,EACRO,WAXe,WACnBrB,GAAae,QAYTO,UAAQ,EACRC,gBAAiB,eACjBC,UAAU,EACVC,iBAAkB,2CAClBC,kBAAmB,UAVvB,UAYI,cAACC,GAAA,EAAD,CACIjE,UAAW,kFACXI,MAAO,CACH8D,oBAnBK,GAoBLC,qBApBK,IAgBb,SAOI,cAAC,KAAD,CACIX,KAAM,KACNxD,UAAW,GACXqE,KAAM4G,SAGd,qBACIjL,UAAW,yCACXI,MAAO,CACHgE,uBAhCK,GAiCLI,wBAjCK,IA6Bb,SAMI,eAACC,GAAA,EAAD,CACIzE,UAAW,sBACX0E,MAAM,UACNlB,KAAM,KACNe,QAASnB,EAJb,UAMI,cAAC,KAAD,CACIpD,UAAW,OACXqE,KAAM0G,OAETvM,WCzDR0M,GAAoC,SAAC,GAKO,IAJHrD,EAIE,EAJFA,SAIE,IAHFsD,eAGE,MAHQ,SAACC,GACPC,QAAQC,IAAIF,IAEd,IAENtK,oBAAS,GAFH,mBAE7CyK,EAF6C,KAE5BC,EAF4B,OAGA1K,oBAAS,GAHT,mBAG7C2K,EAH6C,KAGzBC,EAHyB,OAI5B5K,mBAAS,GAJmB,mBAI7C6K,EAJ6C,KAIvCC,EAJuC,OLiCjD,SAAyB/D,GAAqB,IAAD,EACR/G,mBAAS+G,GADD,mBACzCgE,EADyC,KAC3BC,EAD2B,OAERhL,mBAAmB,IAFX,mBAEzCgH,EAFyC,KAE3BiE,EAF2B,OAGdjL,mBAASkL,KAAKC,OAHA,mBAGzCC,EAHyC,KAG9BC,EAH8B,KAK5CN,IAAiBhE,IACjBkE,EAAgB,IAChBD,EAAgBjE,GAChBsE,EAAaH,KAAKC,QAItB,IAZgD,EAiBLrE,GAAqCC,EAAUC,GAE1F,MAAO,CACHmB,QARY,SAACmD,GACb,IAAMC,EAAU,uBAAOvE,GAAP,CAAqBO,SAAS+D,KAC9CL,EAAgBM,IAOhB9D,kBArB4C,EAiBzCA,kBAKHQ,cAtB4C,EAiBtBA,cAMtBqC,WAAY,CAACvD,WAAUC,eAAcwE,SAAUN,KAAKC,MAAQC,IKlDAK,CAAgB1E,GAAzEU,EAN6C,EAM7CA,kBAAmBQ,EAN0B,EAM1BA,cAAeE,EANW,EAMXA,QAASmC,EANE,EAMFA,WAE5CpG,EAAgBC,iBAAuB,MACvCC,EAAiBtE,GAAaoE,GAG9BwH,EAAa,WACfrB,EAAQC,IAwBZ,OArBAjK,qBAAU,WACNqK,GAAmB,GACnBE,GAAsB,KAEvB,CAAC7D,IAEJ1G,qBAAU,WACgB,SAAlB4H,GACAyC,GAAmB,GAED,YAAlBzC,GACA2C,GAAsB,KAE3B,CAAC3C,IAEJ5H,qBAAU,WACN,IAAMsL,EAAevH,EAAelE,OAAS,EAAI,EAAK,IAChD0L,EAAaxH,EAAenE,MAAQ,IAC1C6K,EAAQe,KAAKC,IAAIH,EAAaC,MAC/B,CAACxH,IAGA,sBACIlF,UAAW,wEACXa,IAAKmE,EAFT,UAQI,cAAC,GAAD,CACI/B,OAAQsI,EACRT,YAAa0B,IAGjB,cAAC,GAAD,CACIvJ,OAAQwI,EACRX,YAAa0B,IAGjB,qBACIxM,UAAW,qBADf,SAGI,cAAC,GAAD,CACIwD,KAAM,GACN+D,WAAYgB,EACZvI,UAAW,mCAGnB,cAAC,GAAD,CACII,MAAO,CAACuL,KAAMA,GACd1C,QAASA,QCzEzB,SAAS4D,GAAgB9Q,GACrB,IAAM+Q,EAAa5S,GAAO6B,GAASzC,UAC7ByT,EAAiB7S,GAAO6B,GAASF,cAOjCmR,EANkBF,EAAWjH,KAAI,SAACgC,GACpC,MAAO,CAACA,WAAUoF,KAAMC,OAAO/Q,aAAa0L,EAASW,UAAY,OAEvB2E,MAAK,SAACxH,EAAGyH,GACnD,OAAOzH,EAAEsH,KAAOG,EAAEH,QAEwBpH,KAAI,SAACwH,GAC/C,OAAOA,EAAIxF,YAGf,OAAO,aArBX,SAAsByF,GAClB,IAAK,IAAIC,EAAID,EAAM5E,OAAQ,EAAI6E,EAAGA,IAAK,CACnC,IAAIC,EAAIb,KAAKc,MAAMd,KAAKe,SAAWH,GADA,EAER,CAACD,EAAMC,EAAI,GAAID,EAAME,IAA/CF,EAAME,GAF4B,KAExBF,EAAMC,EAAI,GAFc,KAIvC,OAAOD,EAgBIK,CAAaX,EAAgBY,OAAO,EAAGb,KAW/C,SAASc,GAAa9R,GAAkB,IAAD,EACR+E,qBADQ,mBACnCxH,EADmC,KACxBwU,EADwB,OAEdhN,mBAAS,MAFK,mBAEnCuF,EAFmC,KAE3B0H,EAF2B,OAIIjN,qBAJJ,mBAInCkN,EAJmC,KAIlBC,EAJkB,OAKJnN,mBAAuB,IALnB,mBAKnCoN,EALmC,KAKtBC,EALsB,KAO1ChN,qBAAU,WACN,IAAM2L,EAAaD,GAAgB9Q,GAC7BqS,EAActB,EAAWlE,QAC/BqF,EAAmBG,GACnBN,EAAahB,GACbqB,EAAe,MAEhB,IAgBH,MAAO,CACHtG,SAAUmG,EACV7C,QAhBY,SAACC,GAIb,GA5BR,SAA2BA,GAEvB,GAAsB,YADExD,GAAqCwD,EAAWvD,SAAUuD,EAAWtD,cAAtFiB,cAC0B,CAC7B,IAAMsF,EAAmBlS,aAAaiP,EAAWvD,SAASW,UAAY,EACtErM,aAAaiP,EAAWvD,SAASW,SAAW0E,OAAOmB,GAAoB,GAqBvEC,CAAkBlD,GAElB+C,EAAe,GAAD,oBAAKD,GAAL,CAAkB9C,KAC5B9R,EAAW,CACX,IAAM8U,EAAc9U,EAAUsP,QACzBwF,GACDL,EAAU,UAEdE,EAAmBG,KAQvB/H,SACA7G,YAAa,CAAC0O,cAAanS,YC5D5B,IAAMwS,GAA8C,SAAC,GAAkB,IAAjBnD,EAAgB,EAAhBA,WACnDvM,EAAMhC,KAAK4C,EAAE,OADsD,EAKrEmI,GAAqCwD,EAAWvD,SAAUuD,EAAWtD,cAFrES,EAHqE,EAGrEA,kBAIEiG,EAAmC,YAPgC,EAIrEzF,cAGkD,UAAY,UAElE,OACI,eAAChJ,GAAA,EAAD,CAAKC,UAAW,+CAAhB,UACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EACJC,GAAI,EACJH,UAAW,GAFhB,SAGI,cAAC,GAAD,CACIwD,KAAM,GACN+D,WAAYgB,EACZvI,UAAW,0BAGnB,cAACC,GAAA,EAAD,CAAKC,GAAI,EACJC,GAAI,EACJH,UAAS,qDAAgDwO,GAF9D,SAGI,8BACI,qBAAIxO,UAAW,UAAf,UACI,sBAAMA,UAAW,mBAAoBM,SAAU8K,EAAWkB,SAAW,MACrE,sBAAMtM,UAAW,OAAQM,SAAUzB,e,6BCzB5C4P,G,iFAAf,WAAmCjP,GAAnC,iCAAAmG,EAAA,6DACUuI,EAAc1O,EAAY0O,YAC1BpO,EAAgBoO,EAAYQ,QAAO,SAACC,EAAKvD,GAC3C,OAAOuD,EAAMvD,EAAWkB,WACzB,GACGzM,EAAeqO,EAAY1Q,QAAO,SAAC4N,GAErC,MAAyB,YADDxD,GAAqCwD,EAAWvD,SAAUuD,EAAWtD,cAAtFiB,iBAERL,OAEGhM,EAAa,CACfkD,WAAYsO,EAAYxF,OACxB7I,aAAcA,EACdC,cAAeA,EACfW,UAAWuL,KAAKC,OAGdlQ,EAAUyD,EAAYzD,QAEtB6S,EAAa/O,IAAiBqO,EAAYxF,OAnBpD,SAqBkCnM,GAAqBR,GArBvD,cAqBUS,EArBV,OAsBUqS,EAAiBrS,EAAgBG,WAEnCmS,GAAc,EACbD,GAEMA,EAAehP,aAAeA,GAE9B+O,GAAcC,EAAe/O,cAAgBA,KADpDgP,GAAc,GAFdA,GAAc,EAQZ9S,EAAiB,CACnBU,aACAC,WAAamS,EAAepS,EAAaF,EAAgBG,WACzDC,WAAYJ,EAAgBI,WAAa,GArCjD,UAwCUd,GAAqBC,EAASC,GAxCxC,iCA0CW,CACH4D,WAAYsO,EAAYxF,OACxB7I,eACAC,gBACAW,UAAWuL,KAAKC,MAChB2C,aACAE,gBAhDR,6C,sBAyDO,IAAMC,GAAwC,SAAC,GAA8B,IAA7BvP,EAA4B,EAA5BA,YAAawP,EAAe,EAAfA,UAC1DnQ,EAAMhC,KAAK4C,EAAE,OACbf,EAAQ7B,KAAK4C,EAAE,SACfwP,EAAgBhK,iBAAuB,MAHkC,EAIrDnE,mBAAS,CAACjB,aAAc,EAAGC,cAAe,EAAG8O,YAAY,EAAOE,aAAa,IAJxB,mBAIxEI,EAJwE,KAIjEC,EAJiE,KAKxEtP,EAAwDqP,EAAxDrP,aAAcC,EAA0CoP,EAA1CpP,cAAe8O,EAA2BM,EAA3BN,WAAYE,EAAeI,EAAfJ,YAEhD3N,qBAAU,WACN,IAAIuE,GAAY,EAehB,OAdA,sBAAC,oCAAAC,EAAA,sEACwE8I,GAAoBjP,GAD5F,gBACUK,EADV,EACUA,aAAcC,EADxB,EACwBA,cAAe8O,EADvC,EACuCA,WAAYE,EADnD,EACmDA,YAC3CpJ,IACDyJ,EAAS,CAACtP,eAAcC,gBAAe8O,aAAYE,gBACnDlM,GAAYS,OACRuL,GACA9L,GAAWO,OAEX4L,GAAiBA,EAAc5N,SAC/B4N,EAAc5N,QAAQ+N,eAAe,CAACC,SAAU,YAT3D,0CAAD,GAcO,WACH3J,GAAY,KAIjB,IAGH,IAAMV,EAAgBC,iBAAuB,MACvCC,EAAiBtE,GAAaoE,GAEpC,OACI,sBAAK5E,MAAO,CAACkP,UAAW,SAAUzO,IAAKmE,EAAvC,UACK4J,GAAc,cAAC,KAAD,CACXW,eAAgB,CAACC,EAAG,EAAGC,EAAG,EAAGC,EAAGxK,EAAenE,MAAO4O,EAA2B,GAAxBzK,EAAelE,QACxED,MAAOmE,EAAenE,MACtBC,OAAQkE,EAAelE,OACvB4O,SAAS,IAEZpQ,EAAY0O,YAAYrI,KAAI,SAACuF,GAC1B,OACI,cAAC,GAAD,CAAiDA,WAAYA,GAAzCA,EAAWvD,SAASW,YAIhD,oBAAIpI,MAAO,CAACyP,eAAgB,SAC5B,eAAC9P,GAAA,EAAD,CAAKC,UAAW,oDAAhB,UACI,eAACC,GAAA,EAAD,CAAKC,GAAI,EACJC,GAAI,EACJH,UAAW,gDAFhB,UAGI,oBAAIA,UAAW,UAAf,SACI,sBAAMA,UAAW,mBACXM,SAAQ,UAAK5B,EAAL,YAAcmB,EAAd,YAA8BL,EAAY0O,YAAYxF,YAEvEkG,IAAeE,GAAe,qBAAK9O,UAAW,sCACXI,MAAO,CACH0P,YAAa,QACbrJ,YAAa,MACbE,aAAc,OACdoD,MAAO,EACPhD,QAAS,GACTgJ,UAAW,mCAPpB,SAS7B,oBAAI/P,UAAW,6BAAf,SAA8CnD,KAAK4C,EAAE,gBAEtDqP,GAAe,qBAAK9O,UAAW,sCACXI,MAAO,CACH0P,YAAa,QACbrJ,YAAa,MACbE,aAAc,OACdoD,MAAO,EACPhD,QAAS,GACTgJ,UAAW,kBAPpB,SASd,oBAAI/P,UAAW,6BAAf,SAA8CnD,KAAK4C,EAAE,oBAG3D,cAACQ,GAAA,EAAD,CAAKC,GAAI,EACJC,GAAI,EACJH,UAAS,wCAFd,SAGI,8BACI,qBAAIA,UAAW,UAAf,UACI,sBAAMA,UAAW,mBAAoBM,SAAUR,EAAgB,MAC/D,sBAAME,UAAW,OAAQM,SAAUzB,cAMnD,cAACkB,GAAA,EAAD,CAAKC,UAAW,mCAAhB,SACI,sBAAKa,IAAKoO,EAAV,WACML,GACF,eAACnK,GAAA,EAAD,CAAQzE,UAAW,cACXI,MAAO,CAACuG,aAAc,QACtBpC,QAASyK,EAFjB,UAGE,cAAC,KAAD,CACIhP,UAAW,OACXwD,KAAM,KACNa,KAAM2L,OAEV,sBAAMhQ,UAAW,mBAAoBI,MAAO,CAACC,SAAU,QAASC,SAAUzD,KAAK4C,EAAE,gBAElFmP,GACD,eAACnK,GAAA,EAAD,CAAQzE,UAAW,cACXI,MAAO,CAACuG,aAAc,QACtBpC,QAASyK,EAFjB,UAGE,cAAC,KAAD,CACIhP,UAAW,OACXwD,KAAM,KACNa,KAAM4L,OAEV,sBAAMjQ,UAAW,mBAAoBI,MAAO,CAACC,SAAU,QACjDC,SAAUzD,KAAK4C,EAAE,iCCxKhCyQ,GAAsC,SAAC,GAAiD,IAAD,IAA/CjN,cAA+C,SAAhCkN,EAAgC,EAAhCA,YAAahN,EAAmB,EAAnBA,cAcvE5E,EAAmB1B,KAAK4C,EAAE,oBAC1B2Q,EAASvT,KAAK4C,EAAE,oBAChB6D,EAAUzG,KAAK4C,EAAE,sBACvB,OACI,eAAC8D,GAAA,EAAD,CACIC,KAAM,KACNC,KAAMR,EACNU,WAXe,WACnBjB,GAAUW,QAWNgN,SAAS,SACTzM,UAAQ,EACRC,gBAAiB,eACjBC,UAAU,EACVC,iBAAkB,2CAClBC,kBAAmB,UATvB,UAWI,eAACC,GAAA,EAAD,CACIjE,UAAW,+EACXI,MAAO,CACH8D,oBAnBK,GAoBLC,qBApBK,IAgBb,UAOI,cAAC,KAAD,CACIX,KAAM,KACNxD,UAAW,GACXqE,KAAMiM,OAEV,mBACItQ,UAAW,gCACXM,SAAU8P,IAEd,mBACIpQ,UAAW,kCACXM,SAAUgD,OAGlB,sBACItD,UAAW,kBADf,UAGI,qBACIA,UAAW,+DACXI,MAAO,CACHgE,uBA3CC,IAwCT,SAKI,cAAC,KAAD,CACIpE,UAAW,aACXqE,KAAMC,KACNd,KAAM,KACNe,QA5DC,WACjBxC,GAAWsB,OACXF,SA6DQ,qBACInD,UAAW,yCACXI,MAAO,CACHoE,wBAvDC,IAoDT,SAKI,cAACC,GAAA,EAAD,CACIzE,UAAW,sBACX0E,MAAM,UACNlB,KAAM,KACNe,QApED,WACf/B,GAAUa,OACV8M,KA8DY,SAOK5R,aC/EZgS,GAAsC,SAAC,GAA0B,IAAzBxU,EAAwB,EAAxBA,QAASiT,EAAe,EAAfA,UAAe,EACzBlO,oBAAS,GADgB,mBAClE0P,EADkE,KAChDC,EADgD,OAGxB5C,GAAa9R,GAAvD8L,EAHkE,EAGlEA,SAAUsD,EAHwD,EAGxDA,QAAS9E,EAH+C,EAG/CA,OAAQ7G,EAHuC,EAGvCA,YAYlC,OACI,gCACgB,OAAX6G,GAAmBwB,GACpB,gCACK2I,GACD,cAAC,GAAD,CACIvN,OAAQuN,EACRrN,cAhBc,WAC1BsN,GAAoB,IAgBRN,YAbQ,WACpBM,GAAoB,GACpBzB,OAaM,qBACIhP,UAAW,qCACXI,MAAO,CAACsQ,OAAQ,GAFpB,SAII,cAACjM,GAAA,EAAD,CACEzE,UAAW,uBACX0E,MAAM,UACNlB,KAAM,KACNe,QAAS,WACLkM,GAAoB,IAL1B,SAQA,cAAC,KAAD,CACIjN,KAAM,KACNxD,UAAW,GACXqE,KAAMiM,WAId,cAAC,GAAD,CACIzI,SAAUA,EACVsD,QAASA,OAKH,WAAX9E,GACD,cAAC,GAAD,CAAY7G,YAAaA,EAAawP,UAAWA,QCrDhD2B,GAAwC,SAAC,GAGW,IAAD,IAFF1N,cAEE,SADF6H,EACE,EADFA,YAEpD1H,EAAc,WAChBrB,GAAWsB,OACXyH,KAME8F,EAAkB/T,KAAK4C,EAAE,gBAE/B,OACI,eAAC8D,GAAA,EAAD,CACIC,KAAM,KACNC,KAAMR,EACNS,OAAQN,EACRO,WAXe,WACnBjB,GAAUW,QAYNO,UAAQ,EACRC,gBAAiB,eACjBC,UAAU,EACVC,iBAAkB,2CAClBC,kBAAmB,UAVvB,UAYI,cAACC,GAAA,EAAD,CACIjE,UAAW,kFACXI,MAAO,CACH8D,oBAnBK,GAoBLC,qBApBK,IAgBb,SAOI,qBAAK0M,IAAK,MAAO5O,IAAG,UAAK6O,gBAAL,oBAExB,qBACI9Q,UAAW,yCACXI,MAAO,CACHgE,uBA5BK,GA6BLI,wBA7BK,IAyBb,SAMI,eAACC,GAAA,EAAD,CACIzE,UAAW,sBACX0E,MAAM,UACNlB,KAAM,KACNe,QAASnB,EAJb,UAMI,cAAC,KAAD,CACIpD,UAAW,OACXqE,KAAM4L,OAETW,WCzDRG,GAAgB,WAAO,IAAD,EACajQ,mBAAwB,MADrC,mBACxBkQ,EADwB,KACRC,EADQ,OAGiBnQ,oBAAS,GAH1B,mBAGxBoQ,EAHwB,KAGNC,EAHM,KAoB/B,OACI,sBAAKnR,UAAW,cAAhB,UACI,cAAC,GAAD,CACIiD,OAAQiO,EACRpG,YARiB,WACzBqG,GAAoB,OASdH,GACF,gCACE,cAAC,KAAD,CACIhR,UAAW,oDACXwD,KAAM,KACNa,KAAM+M,KACN7M,QApBe,WACzB4M,GAAoB,MAqBd,oBAAInR,UAAW,+BAAf,wBACA,cAAC,GAAD,CACI6E,WA5BW,SAAC9I,GACtBkV,EAAkBlV,SA6BbiV,GACD,cAAC,GAAD,CACIhC,UAnCY,WACpBiC,EAAkB,OAmCVlV,QAASiV,QCtCnBK,GAAc5T,QACW,cAA7BmE,OAAO0P,SAASC,UAEe,UAA7B3P,OAAO0P,SAASC,UAEhB3P,OAAO0P,SAASC,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAeC,GACtCzU,UAAU0U,cACPC,SAASH,GACTI,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/C,QACfhS,UAAU0U,cAAcQ,YAI1B/G,QAAQC,IACN,+GAKEqG,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB1G,QAAQC,IAAI,sCAGRqG,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAACC,GACNnH,QAAQmH,MAAM,4CAA6CA,MCjGjE,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SFcnB,SAAkB1B,GACvB,GAA6C,kBAAmBzU,UAAW,CAGzE,GADkB,IAAIoW,IAAIxC,gBAAwBlP,OAAO0P,SAASiC,MACpDC,SAAW5R,OAAO0P,SAASkC,OAIvC,OAGF5R,OAAOC,iBAAiB,QAAQ,WAC9B,IAAM6P,EAAK,UAAMZ,gBAAN,sBAEPO,KAgEV,SAAiCK,EAAeC,GAE9C8B,MAAM/B,EAAO,CACXgC,QAAS,CAAE,iBAAkB,YAE5B5B,MAAK,SAAC6B,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAAStN,QACO,MAAfuN,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C5W,UAAU0U,cAAcmC,MAAMjC,MAAK,SAACC,GAClCA,EAAaiC,aAAalC,MAAK,WAC7BlQ,OAAO0P,SAAS2C,eAKpBxC,GAAgBC,EAAOC,MAG1BY,OAAM,WACLlH,QAAQC,IAAI,oEAtFV4I,CAAwBxC,EAAOC,GAI/BzU,UAAU0U,cAAcmC,MAAMjC,MAAK,WACjCzG,QAAQC,IACN,+GAMJmG,GAAgBC,EAAOC,OEpC/BwC,GAIA1B,O","file":"static/js/main.1582a235.chunk.js","sourcesContent":["import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [1];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n// questions.push({\n//   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n//   \"answer\": leftTerm\n// })\n// questions.push({\n//   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n//   \"answer\": rightTerm\n// })\n    })\n})\n\nconst level = {\n    \"title\": \"Level1\",\n    \"description\": \"1の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [1];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level2\",\n    \"description\": \"1の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [2];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n// questions.push({\n//   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n//   \"answer\": leftTerm\n// })\n// questions.push({\n//   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n//   \"answer\": rightTerm\n// })\n    })\n})\n\nconst level = {\n    \"title\": \"Level3\",\n    \"description\": \"2の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [2];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level4\",\n    \"description\": \"2の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [3];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n// questions.push({\n//   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n//   \"answer\": leftTerm\n// })\n// questions.push({\n//   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n//   \"answer\": rightTerm\n// })\n    })\n})\n\nconst level = {\n    \"title\": \"Level5\",\n    \"description\": \"3の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [3];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level6\",\n    \"description\":\"3の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [4];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n// questions.push({\n//   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n//   \"answer\": leftTerm\n// })\n// questions.push({\n//   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n//   \"answer\": rightTerm\n// })\n    })\n})\n\nconst level = {\n    \"title\": \"Level7\",\n    \"description\":\"4の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [4];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level8\",\n    \"description\":\"4の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [5];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n// questions.push({\n//   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n//   \"answer\": leftTerm\n// })\n// questions.push({\n//   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n//   \"answer\": rightTerm\n// })\n    })\n})\n\nconst level = {\n    \"title\": \"Level9\",\n    \"description\":\"5の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [5];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level10\",\n    \"description\":\"5の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [6];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n// questions.push({\n//   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n//   \"answer\": leftTerm\n// })\n// questions.push({\n//   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n//   \"answer\": rightTerm\n// })\n    })\n})\n\nconst level = {\n    \"title\": \"Level11\",\n    \"description\":\"6の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [6];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level12\",\n    \"description\":\"6の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [7];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n// questions.push({\n//   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n//   \"answer\": leftTerm\n// })\n// questions.push({\n//   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n//   \"answer\": rightTerm\n// })\n    })\n})\n\nconst level = {\n    \"title\": \"Level13\",\n    \"description\": \"7の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [7];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level14\",\n    \"description\": \"7の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [8];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n        // questions.push({\n        //   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n        //   \"answer\": leftTerm\n        // })\n        // questions.push({\n        //   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n        //   \"answer\": rightTerm\n        // })\n    })\n})\n\nconst level = {\n    \"title\": \"Level15\",\n    \"description\": \"8の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [8];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level16\",\n    \"description\": \"8の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [9];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n        // questions.push({\n        //   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n        //   \"answer\": leftTerm\n        // })\n        // questions.push({\n        //   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n        //   \"answer\": rightTerm\n        // })\n    })\n})\n\nconst level = {\n    \"title\": \"Level17\",\n    \"description\": \"9の段\",\n    \"questionCount\": 9,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [9];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level18\",\n    \"description\": \"9の段\\n虫食い\",\n    \"questionCount\": 18,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${leftTerm}x${rightTerm}=${replacePlaceholder(rightHandSide)}`,\n            \"answer\": rightHandSide\n        })\n        // questions.push({\n        //   \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n        //   \"answer\": leftTerm\n        // })\n        // questions.push({\n        //   \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n        //   \"answer\": rightTerm\n        // })\n    })\n})\n\nconst level = {\n    \"title\": \"Level19\",\n    \"description\": \"九九 20問\",\n    \"questionCount\": 20,\n    questions\n}\n\nexport default level\n","import {Question} from '../@types/calcDrill'\n\nconst questions: Question[] = [];\nconst leftArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconst rightArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// const range = (start, end) => [...Array((end - start) + 1)].map((_, i) => start + i);\nconst replacePlaceholder = (number: number) => {\n    return String(number).replace(/[0-9]/g, '?');\n}\n\nleftArray.forEach((leftTerm) => {\n    rightArray.forEach((rightTerm) => {\n        const rightHandSide = leftTerm * rightTerm;\n        questions.push({\n            \"problem\": `${replacePlaceholder(leftTerm)}x${rightTerm}=${rightHandSide}`,\n            \"answer\": leftTerm\n        })\n        questions.push({\n            \"problem\": `${leftTerm}x${replacePlaceholder(rightTerm)}=${rightHandSide}`,\n            \"answer\": rightTerm\n        })\n    })\n})\n\nconst level = {\n    \"title\": \"Level20\",\n    \"description\": \"九九 20問\\n虫食い\",\n    \"questionCount\": 20,\n    questions\n}\n\nexport default level\n","import level_9x9_lv01 from './level_9x9_lv01'\nimport level_9x9_lv01_hole from './level_9x9_lv01_hole'\nimport level_9x9_lv02 from './level_9x9_lv02'\nimport level_9x9_lv02_hole from './level_9x9_lv02_hole'\nimport level_9x9_lv03 from './level_9x9_lv03'\nimport level_9x9_lv03_hole from './level_9x9_lv03_hole'\nimport level_9x9_lv04 from './level_9x9_lv04'\nimport level_9x9_lv04_hole from './level_9x9_lv04_hole'\nimport level_9x9_lv05 from './level_9x9_lv05'\nimport level_9x9_lv05_hole from './level_9x9_lv05_hole'\nimport level_9x9_lv06 from './level_9x9_lv06'\nimport level_9x9_lv06_hole from './level_9x9_lv06_hole'\nimport level_9x9_lv07 from './level_9x9_lv07'\nimport level_9x9_lv07_hole from './level_9x9_lv07_hole'\nimport level_9x9_lv08 from './level_9x9_lv08'\nimport level_9x9_lv08_hole from './level_9x9_lv08_hole'\nimport level_9x9_lv09 from './level_9x9_lv09'\nimport level_9x9_lv09_hole from './level_9x9_lv09_hole'\nimport level_9x9_lv10 from './level_9x9_lv10'\nimport level_9x9_lv10_hole from './level_9x9_lv10_hole'\n\n\nconst levels = {\n    level_9x9_lv01,\n    level_9x9_lv01_hole,\n    level_9x9_lv02,\n    level_9x9_lv02_hole,\n    level_9x9_lv03,\n    level_9x9_lv03_hole,\n    level_9x9_lv04,\n    level_9x9_lv04_hole,\n    level_9x9_lv05,\n    level_9x9_lv05_hole,\n    level_9x9_lv06,\n    level_9x9_lv06_hole,\n    level_9x9_lv07,\n    level_9x9_lv07_hole,\n    level_9x9_lv08,\n    level_9x9_lv08_hole,\n    level_9x9_lv09,\n    level_9x9_lv09_hole,\n    level_9x9_lv10,\n    level_9x9_lv10_hole,\n}\n\nfor (const [key, value] of Object.entries(levels)) {\n    if (!value.title) {\n    throw new Error(`title is not find in Level:${key}`)\n    }\n    if (!value.questionCount) {\n        throw new Error(`questionCount is not find in Level:${key}`)\n    }\n}\n\nexport {levels}\n","import {LevelRecord} from '../@types/calcDrill'\n\nexport const saveLevelRecordAsync = (levelID: string, newLevelRecord: LevelRecord): Promise<void> => {\n    return new Promise((resolve) => {\n        localStorage[levelID] = JSON.stringify(newLevelRecord);\n        resolve(undefined);\n    });\n}\n\nexport const loadLevelRecordAsync = (levelID: string): Promise<LevelRecord> => {\n    return new Promise((resolve) => {\n        const prevlevelRecord = (localStorage[levelID]) ? JSON.parse(localStorage[levelID]) : null;\n        resolve({\n            lastResult: (prevlevelRecord) ? prevlevelRecord.lastResult : null,\n            bestResult: (prevlevelRecord) ? prevlevelRecord.bestResult : null,\n            clearCount: (prevlevelRecord) ? prevlevelRecord.clearCount : 0,\n        })\n    });\n}\n","import i18n from 'i18next';\nimport _ from 'lodash';\nimport subtag from 'subtag';\n\ni18n.init(\n    {\n      fallbackLng: 'en',\n      resources  : {}\n    }\n);\nconst {language, script} = subtag( navigator.language );\nconst lung_code = _.concat( [language, script] ).filter( Boolean ).join( '-' );\n// console.log( lung_code );//en,ja,es,pt, etc....\ni18n.changeLanguage( lung_code );\n\ni18n.addResources( 'en', 'translation', {selections_addition: 'Addition'} );\ni18n.addResources( 'ja', 'translation', {selections_addition: 'たし算'} );\ni18n.addResources( 'es', 'translation', {selections_addition: 'Adición'} );\n\ni18n.addResources( 'en', 'translation', {selections_subtraction: 'Subtraction'} );\ni18n.addResources( 'ja', 'translation', {selections_subtraction: 'ひき算'} );\ni18n.addResources( 'es', 'translation', {selections_subtraction: 'Sustracción'} );\n\ni18n.addResources( 'en', 'translation', {selections_multiplication: 'Multiplication'} );\ni18n.addResources( 'ja', 'translation', {selections_multiplication: 'かけ算'} );\ni18n.addResources( 'es', 'translation', {selections_multiplication: 'Multiplicación'} );\n\ni18n.addResources( 'en', 'translation', {selections_division: 'Division'} );\ni18n.addResources( 'ja', 'translation', {selections_division: 'わり算'} );\ni18n.addResources( 'es', 'translation', {selections_division: 'División'} );\n\ni18n.addResources( 'en', 'translation', {menuList_record: 'Record'} );\ni18n.addResources( 'ja', 'translation', {menuList_record: 'ベスト記録'} );\ni18n.addResources( 'es', 'translation', {menuList_record: 'Record'} );\n\ni18n.addResources( 'en', 'translation', {menuList_lastResult: 'Last result'} );\ni18n.addResources( 'ja', 'translation', {menuList_lastResult: '最終結果'} );\ni18n.addResources( 'es', 'translation', {menuList_lastResult: 'Ultimo resultado'} );\n\ni18n.addResources( 'en', 'translation', {levelStartModal_messageB: 'are you ready?'} );\ni18n.addResources( 'ja', 'translation', {levelStartModal_messageB: '準備OK？'} );\ni18n.addResources( 'es', 'translation', {levelStartModal_messageB: '¿Estás listo?'} );\n\ni18n.addResources( 'en', 'translation', {levelStartModal_start: 'Start!'} );\ni18n.addResources( 'ja', 'translation', {levelStartModal_start: 'スタート!'} );\ni18n.addResources( 'es', 'translation', {levelStartModal_start: 'Empezar!'} );\n\ni18n.addResources( 'en', 'translation', {exitModal_really: 'Really?'} );\ni18n.addResources( 'ja', 'translation', {exitModal_really: 'ホントに？'} );\ni18n.addResources( 'es', 'translation', {exitModal_really: 'De Verdad?'} );\n\ni18n.addResources( 'en', 'translation', {exitModal_messageB: 'Result is not saved'} );\ni18n.addResources( 'ja', 'translation', {exitModal_messageB: '記録は残らないよ'} );\ni18n.addResources( 'es', 'translation', {exitModal_messageB: 'El resultado no se guarda'} );\n\ni18n.addResources( 'en', 'translation', {exitModal_escape: 'Escape'} );\ni18n.addResources( 'ja', 'translation', {exitModal_escape: '脱出'} );\ni18n.addResources( 'es', 'translation', {exitModal_escape: 'Escapar'} );\n\ni18n.addResources( 'en', 'translation', {successModal_next: 'Next'} );\ni18n.addResources( 'ja', 'translation', {successModal_next: '次へ'} );\ni18n.addResources( 'es', 'translation', {successModal_next: 'Siguiente'} );\n\ni18n.addResources( 'en', 'translation', {failModal_next: 'Don\\'t stop!'} );\ni18n.addResources( 'ja', 'translation', {failModal_next: '頑張れ!'} );\ni18n.addResources( 'es', 'translation', {failModal_next: '¡Venga Vamos!'} );\n\ni18n.addResources( 'en', 'translation', {total: 'Total'} );\ni18n.addResources( 'ja', 'translation', {total: '合計'} );\ni18n.addResources( 'es', 'translation', {total: 'Total'} );\n\ni18n.addResources( 'en', 'translation', {goodJob: 'Good job!'} );\ni18n.addResources( 'ja', 'translation', {goodJob: 'よくやったね!'} );\ni18n.addResources( 'es', 'translation', {goodJob: 'Buen trabajo!'} );\n\ni18n.addResources( 'en', 'translation', {congratulations: 'Congratulations!'} );\ni18n.addResources( 'ja', 'translation', {congratulations: 'おめでとう!'} );\ni18n.addResources( 'es', 'translation', {congratulations: 'Enhorabuena!'} );\n\ni18n.addResources( 'en', 'translation', {sec: 'sec'} );\ni18n.addResources( 'ja', 'translation', {sec: '秒'} );\ni18n.addResources( 'es', 'translation', {sec: 's'} );\n\ni18n.addResources( 'en', 'translation', {complete: 'Complete!'} );\ni18n.addResources( 'ja', 'translation', {complete: '全問正解!'} );\ni18n.addResources( 'es', 'translation', {complete: 'Completar!'} );\n\ni18n.addResources( 'en', 'translation', {newRecord: 'New record!'} );\ni18n.addResources( 'ja', 'translation', {newRecord: '新記録更新!'} );\ni18n.addResources( 'es', 'translation', {newRecord: 'Nuevo record!'} );\n\ni18n.addResources( 'en', 'translation', {youDidIt: 'You did it!'} );\ni18n.addResources( 'ja', 'translation', {youDidIt: 'やったね!'} );\ni18n.addResources( 'es', 'translation', {youDidIt: '¡Lo hiciste!'} );\n\ni18n.addResources( 'en', 'translation', {goldMedal: 'Gold medal'} );\ni18n.addResources( 'ja', 'translation', {goldMedal: '金メダル'} );\ni18n.addResources( 'es', 'translation', {goldMedal: 'Medalla de oro'} );\n\ni18n.addResources( 'en', 'translation', {silverMedal: 'Silver medal'} );\ni18n.addResources( 'ja', 'translation', {silverMedal: '銀メダル'} );\ni18n.addResources( 'es', 'translation', {silverMedal: 'Medalla de plata'} );\n\ni18n.addResources( 'en', 'translation', {bronzeMedal: 'Bronze medal'} );\ni18n.addResources( 'ja', 'translation', {bronzeMedal: '銅メダル'} );\ni18n.addResources( 'es', 'translation', {bronzeMedal: 'Medalla de bronce'} );\n\ni18n.addResources( 'en', 'translation', {withInClear: 'Clear within {{sec}} sec!'} );\ni18n.addResources( 'ja', 'translation', {withInClear: '{{sec}}秒以内にクリア!'} );\ni18n.addResources( 'es', 'translation', {withInClear: 'Borrar en {{sec}} segundos!'} );\n\ni18n.addResources( 'en', 'translation', {playTogether: 'Let\\'s play together!'} );\ni18n.addResources( 'ja', 'translation', {playTogether: 'みんなで頑張ろう!'} );\ni18n.addResources( 'es', 'translation', {playTogether: '¡Juguemos juntos!'} );\n\nexport {i18n};\n","import React from 'react';\nimport {Row, Col} from \"react-bootstrap\";\nimport {i18n} from \"../common/i18n\";\nimport {format} from 'date-fns'\nimport ja from 'date-fns/locale/ja'\nimport {LevelRecord} from '../@types/calcDrill'\n\nexport interface MenuListRowProps {\n    title: string;\n    description: string;\n    levelRecord: LevelRecord;\n}\n\nexport const MenuListRow: React.FC<MenuListRowProps> = ({title, description, levelRecord}) => {\n    const sec = i18n.t('sec');\n    const menuList_record = i18n.t('menuList_record');\n    const menuList_lastResult = i18n.t('menuList_lastResult');\n    const {lastResult, bestResult} = levelRecord;\n\n\n    const getResultString = (result) => {\n        const isCompleted = result.totalCount === result.successCount;\n        return isCompleted ? result.totalDuration / 1000 + sec : `${result.successCount}/${result.totalCount}`\n    }\n\n    return (\n        // <Container>\n        <Row\n            className={'mx-0 justify-content-center user-select-none'}>\n            <Col xs={4} sm={5}>\n                <Row xs={1} sm={2} className={'h-100'}>\n                    <Col className={`d-flex align-items-center`}>\n                        <div>\n                            <div className={'font-weight-bold'} style={{fontSize: '1.5em'}} children={title}/>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className={`d-flex align-items-center font-italic mb-2 w-100 h-100`}>\n                            <div style={{whiteSpace: 'pre-wrap'}} children={description}/>\n                        </div>\n\n                    </Col>\n                </Row>\n            </Col>\n            <Col>\n                <Row xs={1} sm={2}>\n                    <Col\n                        className={`d-flex align-items-center font-italic px-0`}>\n                        {bestResult &&\n                        <div className={''}>\n                          <div>{menuList_record + ': ' + getResultString(bestResult)}</div>\n                          <div className={'text-right text-muted'}>\n                            <small children={format(bestResult.timestamp, 'P', {locale: ja})}/>\n                          </div>\n                        </div>}\n                    </Col>\n                    <Col\n                        className={`d-flex align-items-center font-italic`}>\n                        {lastResult &&\n                        <div className={''}>\n                          <div>{menuList_lastResult + ': ' + getResultString(lastResult)}</div>\n                          <div className={'text-right text-muted'}>\n                            <small children={format(lastResult.timestamp, 'P pp', {locale: ja})}/>\n                          </div>\n                        </div>}\n\n                    </Col>\n                </Row>\n            </Col>\n\n        </Row>\n        // </Container>\n    )\n}\n","import React, {useEffect, useState} from \"react\";\n\nexport function useDimension(ref: React.RefObject<HTMLElement>) {\n    const [dimensions, setDimensions] = useState({width: 0, height: 0});\n    const RESET_TIMEOUT = 100;\n    useEffect(() => {\n        const testDimensions = () => {\n            if (ref.current) {\n                setDimensions({\n                    width: ref.current.offsetWidth,\n                    height: ref.current.offsetHeight\n                });\n            }\n        }\n        let movement_timer: any = null;\n\n        const handleResize = () => {\n            clearInterval(movement_timer);\n            movement_timer = setTimeout(testDimensions, RESET_TIMEOUT);\n        }\n        window.addEventListener('resize', handleResize);\n        testDimensions();\n        return () => window.removeEventListener(\"resize\", handleResize);\n\n    }, [ref]);\n    return dimensions;\n}\n","export default __webpack_public_path__ + \"static/media/bt3.fa6e74d4.mp3\";","export default __webpack_public_path__ + \"static/media/bubuu.4983ce95.mp3\";","export default __webpack_public_path__ + \"static/media/hayaosi.f4c818a1.mp3\";","export default __webpack_public_path__ + \"static/media/win1.7ef901e0.mp3\";","export default __webpack_public_path__ + \"static/media/win2.1c8badfa.mp3\";","export default __webpack_public_path__ + \"static/media/sel5.aa313145.mp3\";","export default __webpack_public_path__ + \"static/media/stadiumcheer1.9faef6c3.mp3\";","import {Howl} from 'howler';\n\n// @ts-ignore\nimport pressSoundSrc from '../assets/bt3.mp3'\n// @ts-ignore\nimport failSoundSrc from '../assets/bubuu.mp3'\n// @ts-ignore\nimport successSoundSrc from '../assets/hayaosi.mp3'\n// @ts-ignore\nimport hideSoundSrc from '../assets/win1.mp3'\n// @ts-ignore\nimport openSoundSrc from '../assets/win2.mp3'\n// @ts-ignore\nimport resultSoundSrc from '../assets/sel5.mp3'\n// @ts-ignore\nimport cheerSoundSrc from '../assets/stadiumcheer1.mp3'\n\n\nexport const pressSound = new Howl({\n    src: [\n        pressSoundSrc\n    ]\n}).volume(0.2);\n\nexport const failSound = new Howl({\n    src: [\n        failSoundSrc\n    ]\n});\n\nexport const successSound = new Howl({\n    src: [\n        successSoundSrc\n    ]\n});\n\nexport const hideSound = new Howl({\n    src: [\n        hideSoundSrc\n    ]\n});\n\nexport const openSound = new Howl({\n    src: [\n        openSoundSrc\n    ]\n});\n\nexport const resultSound = new Howl({\n    src: [\n        resultSoundSrc\n    ]\n});\n\nexport const cheerSound = new Howl({\n    src: [\n        cheerSoundSrc\n    ]\n});\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/dialog-style.css';\nimport {Modal, Button, Card} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\nimport {faPlayCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {i18n} from '../common/i18n';\nimport {pressSound, openSound} from '../common/sounds'\n\nexport interface StartModalProps {\n    isShow: boolean;\n    title: string;\n    description: string;\n    onClickStart: () => void;\n    onClickCancel: () => void;\n}\n\n\nexport const StartModal: React.FC<StartModalProps> = ({\n                                                          isShow = true,\n                                                          title = '',\n                                                          description = '',\n                                                          onClickStart,\n                                                          onClickCancel\n                                                      }) => {\n\n    const handleClose = () => {\n        pressSound.play();\n        onClickCancel()\n    }\n    const handleStart = () => {\n        pressSound.play();\n        onClickStart()\n    }\n\n    const handleEntering = () => {\n        openSound.play();\n    }\n    const borderRadius = 20;\n    const levelStartModal_start = i18n.t('levelStartModal_start');\n    const message = i18n.t('levelStartModal_messageB');\n\n    return (\n        <Modal\n            size={'sm'}\n            show={isShow}\n            onHide={handleClose}\n            onEntering={handleEntering}\n            // backdrop='static'\n            centered\n            dialogClassName={'dialog-style'}\n            keyboard={false}\n            contentClassName={'bg-transparent border-0 user-select-none'}\n            backdropClassName={'bg-dark'}\n        >\n            <Card\n                className={'p-3 text-white bg-info mb-0'}\n                style={{\n                    borderTopLeftRadius: borderRadius,\n                    borderTopRightRadius: borderRadius,\n                }}\n            >\n                <p\n                    className={'mt-0 mb-1 h2 font-weight-bold'}\n                    children={title}\n                />\n                <p\n                    className={'mt-0 mb-1 h2 text-center'}\n                    style={{whiteSpace: 'pre-wrap'}}\n                    children={description}\n                />\n                <p\n                    className={'mt-0 mb-0 text-center font-italic text-left'}\n                    children={message}\n                />\n\n            </Card>\n            <div\n                className={'d-flex flex-row'}\n            >\n                <div\n                    className={'p-3 bg-dark d-flex justify-content-center align-items-center'}\n                    style={{\n                        borderBottomLeftRadius: borderRadius,\n                    }}>\n                    <FontAwesomeIcon\n                        className={'text-muted'}\n                        icon={faTimesCircle}\n                        size={'2x'}\n                        onClick={handleClose}\n                    />\n                </div>\n                <div\n                    className={'bg-primary p-2 flex-grow-1 text-center'}\n                    style={{\n                        borderBottomRightRadius: borderRadius,\n                    }}>\n                    <Button\n                        className={'rounded-pill shadow'}\n                        color='primary'\n                        size={'lg'}\n                        onClick={handleStart}\n                    >\n                        <FontAwesomeIcon\n                            className={'mr-2'}\n                            icon={faPlayCircle}\n                        />\n                        {levelStartModal_start}\n                    </Button>\n                </div>\n\n\n            </div>\n        </Modal>)\n};\n","import React, {useEffect, useRef, useState} from 'react';\nimport {Container, ListGroup} from \"react-bootstrap\";\nimport {levels} from '../levels/allLevels'\nimport {loadLevelRecordAsync} from \"../common/repository\";\nimport {MenuListRow} from './MenuListRow'\nimport {useDimension} from \"./useDimension\";\nimport {StartModal} from './StartModal';\n\nfunction getMenuItems() {\n    return Promise.all(Object.entries(levels).map(async ([key, value]) => {\n        const levelID = key;\n        const levelRecord = await loadLevelRecordAsync(levelID);\n        return ({\n            levelID,\n            title: value.title,\n            description: value.description,\n            levelRecord,\n        })\n    }))\n}\n\nexport interface MenuListProps {\n    startLevel: (levelID: string) => void;\n\n}\n\nexport const MenuList: React.FC<MenuListProps> = ({startLevel}) => {\n    const [menuItems, setMenuItems] = useState<any>([])\n\n    const targetRefRoot = useRef<HTMLDivElement>(null);\n    const rootDimensions = useDimension(targetRefRoot);\n\n    const [isSm, setIsSm] = useState(false);\n\n    const tempClassName = isSm ? 'ml-0 px-0' : 'ml-0';\n\n    const [selectedLevel, setSelectedLevel] = useState<string | null>(null);\n\n    const handleRowClick = (levelID) => {\n        setSelectedLevel(levelID);\n    }\n    const handleCancelClick = () => {\n        setSelectedLevel(null);\n    }\n\n    const startModalTitle = selectedLevel ? levels[selectedLevel].title : 'temp';\n\n    const startModalDescription = selectedLevel ? levels[selectedLevel].description : 'temp';\n\n    useEffect(() => {\n        setIsSm(rootDimensions.width < 573);\n    }, [rootDimensions])\n\n    useEffect(() => {\n        let unmounted = false;\n        (async () => {\n            const _menuItems = await getMenuItems();\n            if (!unmounted) {\n                setMenuItems(_menuItems);\n            }\n        })();\n\n        return () => {\n            unmounted = true;\n        };\n    }, [])\n\n    return (\n        <Container ref={targetRefRoot}>\n            <StartModal\n                isShow={!!selectedLevel}\n                title={startModalTitle}\n                description={startModalDescription}\n                onClickStart={() => {\n                    if (startLevel && selectedLevel) {\n                        startLevel(selectedLevel)\n                    }\n                }}\n                onClickCancel={handleCancelClick}\n\n            />\n            <ListGroup>\n                {menuItems.map((item) => {\n                    return (<ListGroup.Item action\n                                            className={tempClassName}\n                                            key={item.levelID}\n                                            onClick={() => {\n                                                handleRowClick(item.levelID)\n                                            }}\n\n                    >\n                        <MenuListRow\n                            key={item.levelID}\n                            title={item.title}\n                            description={item.description}\n                            levelRecord={item.levelRecord}\n                        /></ListGroup.Item>)\n                })}\n            </ListGroup>\n        </Container>\n    )\n}\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nexport interface QuestionCharacterProps {\n    /*\n    文字サイズ(px)\n     */\n    size?: number;\n    /*\n    ステータス\n     */\n    status: 'ready' | 'fail' | 'success' | null;\n    /*\n    表示テキスト\n     */\n    text?: string;\n\n}\n\nexport const QuestionCharacter: React.FC<QuestionCharacterProps> = ({\n                                                                        size = 50,\n                                                                        status,\n                                                                        text = '0',\n                                                                    }) => {\n    const colorDict = {'ready': 'whiteSmoke', 'fail': 'red', 'success': 'green'};\n    const tempBorderWidth = size * 0.1;\n    const borderColor = (status) ? colorDict[status] : 'whiteSmoke';\n    const borderWidth = (status) ? tempBorderWidth : 0;\n    const isFail = status === 'fail';\n    if (text === \"*\") {\n        text = 'x'\n    }\n    if (text === \"/\") {\n        text = '÷'\n    }\n\n    return (\n        <div\n            className={'user-select-none'}\n            style={{\n                width: `${size * .7}px`,\n                height: `${size}px`,\n                borderRadius: `${size * .25}px`,\n                position: 'relative',\n                marginLeft: -tempBorderWidth,\n                display: 'inline-block',\n                color: 'whiteSmoke',\n            }}\n        >\n            {isFail && <div\n                className={'position-absolute w-100 h-100 d-flex justify-content-center align-items-center'}\n                style={{opacity:0.5}}\n            >\n              <FontAwesomeIcon\n                  color={'red'}\n                  icon={faTimes}\n                  size={'3x'}\n              />\n            </div>}\n\n            <div style={{\n                position: 'absolute',\n                width: '100%',\n                height: '100%',\n                borderRadius: `${size * .25}px`,\n                border: `solid ${borderWidth}px ${borderColor}`,\n                borderColor: borderColor,\n                opacity: .5,\n            }}/>\n            <div style={{\n                height: `${size}px`,\n            }}>\n                <div\n                    style={{\n                        fontFamily: 'helvetica',//Platform.select({ios: 'System', android: 'helvetica'}),\n                        fontWeight: 'bold',\n                        textAlign: 'center',\n                        lineHeight: `${size * 1.04}px`, //'normal',\n                        fontSize: `${size * .8}px`,\n                        // color: textColor,\n                    }}\n                >\n                    {text}\n                </div>\n            </div>\n        </div>\n    )\n};\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport {QuestionCharacter} from './QuestionCharacter'\nimport {Character} from '../@types/calcDrill'\n\nimport {v1 as uuid} from 'uuid';\n\nexport interface QuestionDisplayProps {\n    size?: number;\n\n    characters?: Character[];\n    style?: {};\n    className?: string;\n}\n\nexport const QuestionDisplay: React.FC<QuestionDisplayProps> = ({\n                                                                    size = 50,\n                                                                    characters = [],\n                                                                    style = {},\n                                                                    className = \"\",\n                                                                }) => {\n\n    return (\n        <div\n            className={className}\n            style={{\n                ...style,\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n            }}>\n            {characters.map((character) => {\n                return (\n                    <QuestionCharacter\n                        key={uuid()}\n                        size={size}\n                        text={character.text}\n                        status={character.status}\n                    />)\n            })}\n        </div>\n    )\n};\n","import {Character, CharacterStatus, Question, ProblemStatus} from '../@types/calcDrill'\nimport {useState} from \"react\";\n\nexport function getCurrentCharactersAndProblemStatus(question: Question, inputNumbers: number[]) {\n    const currentInputs = [...inputNumbers];\n    const answerCharacters = Array.from(String(question.answer)).map((string) => {\n        return parseInt(string)\n    });\n    let newProblemStatus: ProblemStatus = null;\n\n    const currentCharacters: Character[] = Array.from(question.problem).map((characterString) => {\n        let text;\n        let status: CharacterStatus;\n        if (characterString !== \"?\") {\n            text = characterString;\n            status = null;\n        } else if (!answerCharacters.length) {\n            text = '?';\n            status = 'fail';\n            newProblemStatus = 'fail';\n        } else {\n            const currentAnswerCharacter = answerCharacters.shift();\n            const currentInputNumber = currentInputs.shift();\n            if (currentInputNumber === undefined) {\n                text = ' ';\n                status = 'ready'\n            } else if (currentAnswerCharacter === currentInputNumber) {\n                text = String(currentInputNumber);\n                status = 'success'\n            } else {\n                text = String(currentInputNumber);\n                status = 'fail'\n                newProblemStatus = 'fail';\n            }\n        }\n\n        return {text, status}\n\n    });\n\n    if (newProblemStatus === null) {\n        const isInputSameCountAsAnswer = inputNumbers.length === Array.from(String(question.answer)).length;\n        if (isInputSameCountAsAnswer) {\n            newProblemStatus = 'success'\n        } else {\n            newProblemStatus = 'ip'\n        }\n    } else {\n        newProblemStatus = 'fail'\n    }\n    return {currentCharacters, problemStatus: newProblemStatus,}\n}\n\nexport function useSolveProblem(question: Question) {\n    const [prevQuestion, setPrevQuestion] = useState(question);\n    const [inputNumbers, setInputNumbers] = useState<number[]>([]);\n    const [startTime, setStartTime] = useState(Date.now());\n\n    if (prevQuestion !== question) {\n        setInputNumbers([]);\n        setPrevQuestion(question);\n        setStartTime(Date.now());\n    }\n\n\n    const onPress = (num: string) => {\n        const newNumbers = [...inputNumbers, parseInt(num)]\n        setInputNumbers(newNumbers)\n    }\n\n    const {currentCharacters, problemStatus} = getCurrentCharactersAndProblemStatus(question, inputNumbers);\n\n    return {\n        onPress,\n        currentCharacters,\n        problemStatus,\n        problemLog: {question, inputNumbers, duration: Date.now() - startTime}\n    }\n}\n","import React, {useState} from 'react';\nimport '../css/bootstrap.min.css';\nimport {Button} from 'react-bootstrap';\n// @ts-ignore\nimport {pressSound} from '../common/sounds'\n\nexport interface NumberPadButtonProps {\n    /**\n     * ボタン番号\n     */\n    number?: string;\n    /**\n     * 背景色\n     */\n    color?: string;\n    /**\n     * ボタン半径\n     */\n    radius?: number;\n    /**\n     * Optional click handler\n     */\n    onPress?: (number: string) => void;\n}\n\nexport const NumberPadButton: React.FC<NumberPadButtonProps> = ({\n                                                                    number = \"0\",\n                                                                    color = \"blue\",\n                                                                    onPress,\n                                                                    radius = 80,\n                                                                    ...props\n                                                                }) => {\n    const [isActive, setIsActive] = useState(false);\n\n    const _onPress = () => {\n        pressSound.play()\n\n        if (onPress) {\n            onPress(number);\n        }\n    };\n    const _backgroundColor = (isActive) ? 'whitesmoke' : color;\n    const _color = (isActive) ? color : 'whitesmoke';\n\n\n    return (\n        <div className={''}\n             style={{\n                 marginBottom: `18px`,\n                 width: `${radius}px`,\n                 height: `${radius}px`,\n                 padding: 0,\n                 display: 'inline-block',\n                 position: \"relative\"\n             }}\n        >\n            <div style={{\n                background: _color,\n                borderTop: '2px solid #ddd',\n                borderRadius: '50%',\n                boxShadow: 'inset 0 8px 48px #ddd',\n                content: '',\n                display: 'block',\n                position: 'absolute',\n                left: `-${radius / 8}px`,\n                right: `-${radius / 8}px`,\n                top: `-${radius / 8}px`,\n                bottom: `-${radius / 8}px`,\n            }}>\n\n            </div>\n            <Button\n                style={{\n                    backgroundColor: _backgroundColor,\n                    borderRadius: `${radius / 2}px`,\n                    width: `${radius}px`,\n                    height: `${radius}px`,\n                    color: _color,\n                    fontSize:  `${radius / 2}px`,\n                    fontWeight: 'bold',\n                    textAlign: 'center',\n                    lineHeight: `${radius / 2}px`,\n                    borderWidth: 0,\n                    backgroundImage: 'linear-gradient(rgba(0,0,0,0), rgba(0,0,0,0.5))',\n                    boxShadow: '0 5px 5px rgba(0, 0, 0, .1), 0 4px 6px rgba(0, 0, 0, .2)',\n                    position: 'absolute',\n                }}\n                onMouseDown={() => {\n                    setIsActive(true);\n                    _onPress()\n                }}\n                onMouseUp={() => {\n                    setIsActive(false)\n                }}\n                onMouseLeave={()=>{\n                    setIsActive(false)\n                }}\n                {...props}>\n                <span style={{\n                    textShadow: isActive ? 'rgb(213, 213, 213) 1px 2px 1px' : '-1px -1px 1px #fff, 1px 1px 1px #000',\n                }}>\n                                    {number}\n\n                </span>\n            </Button>\n\n        </div>\n    )\n};\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport {Row} from 'react-bootstrap';\nimport {NumberPadButton} from './NumberPadButton'\nexport interface NumberPadProps {\n    onPress?: (number: string) => void;\n    style?: any\n}\n\n\nconst colorDict = {\n    bg: 'rgba(105,105,105,0.8)',\n    0: '#0074bf',\n    1: '#f2cf01',\n    2: '#56a764',\n    3: '#d06d8c',\n    4: '#9460a0',\n    5: '#a0c238',\n    6: '#c93a40',\n    7: '#cc528b',\n    8: '#65ace4',\n    9: '#de9610',\n}\n\n\nexport const NumberPad: React.FC<NumberPadProps> = ({\n                                                        onPress,\n                                                        style = {},\n                                                    }) => {\n    return (\n        <div\n            style={{\n                ...style,\n                backgroundColor: colorDict.bg,\n                borderTopRightRadius: 20,\n                borderTopLeftRadius: 20,\n                width: '300px',\n                padding: 0,\n                margin: 0,\n                paddingTop: '10px',\n            }}>\n            <Row style={{\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                margin: 0,\n            }}>\n                <NumberPadButton\n                    number={\"7\"}\n                    color={colorDict[\"7\"]}\n                    onPress={onPress}\n                />\n                <NumberPadButton\n                    number={\"8\"}\n                    color={colorDict[\"8\"]}\n                    onPress={onPress}\n                />\n                <NumberPadButton\n                    number={'9'}\n                    color={colorDict[\"9\"]}\n                    onPress={onPress}\n\n                />\n            </Row>\n            <Row style={{\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                margin: 0,\n            }}>\n                <NumberPadButton\n                    number={\"4\"}\n                    color={colorDict[\"4\"]}\n                    onPress={onPress}\n\n                />\n                <NumberPadButton\n                    number={\"5\"}\n                    color={colorDict[\"5\"]}\n                    onPress={onPress}\n\n                />\n                <NumberPadButton\n                    number={'6'}\n                    color={colorDict[\"6\"]}\n                    onPress={onPress}\n\n                />\n            </Row>\n            <Row style={{\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                margin: 0,\n            }}>\n                <NumberPadButton\n                    number={\"1\"}\n                    color={colorDict[\"1\"]}\n                    onPress={onPress}\n\n                />\n                <NumberPadButton\n                    number={\"2\"}\n                    color={colorDict[\"2\"]}\n                    onPress={onPress}\n\n                />\n                <NumberPadButton\n                    number={'3'}\n                    color={colorDict[\"3\"]}\n                    onPress={onPress}\n\n                />\n            </Row>\n            <Row style={{\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                margin: 0,\n            }}>\n                <NumberPadButton\n                    number={\"0\"}\n                    color={colorDict[\"0\"]}\n                    onPress={onPress}\n                />\n            </Row>\n        </div>\n    )\n};\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/dialog-style.css';\nimport {Modal, Button, Card} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\nimport {faArrowRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {i18n} from '../common/i18n';\nimport {pressSound, failSound} from '../common/sounds'\n\nexport interface FailModalProps {\n    isShow: boolean;\n    onClickNext: () => void;\n}\n\n\nexport const FailModal: React.FC<FailModalProps> = ({\n                                                        isShow = true,\n                                                        onClickNext,\n                                                    }) => {\n    const handleClose = () => {\n        pressSound.play();\n        onClickNext()\n    }\n\n    const handleEntering = () => {\n        failSound.play();\n    }\n\n    const borderRadius = 20;\n    const successModal_next = i18n.t('failModal_next');\n\n\n    // failSound2.play()\n\n    return (\n        <Modal\n            size={'sm'}\n            show={isShow}\n            onHide={handleClose}\n            onEntering={handleEntering}\n            // backdrop='static'\n            centered\n            dialogClassName={'dialog-style'}\n            keyboard={false}\n            contentClassName={'bg-transparent border-0 user-select-none'}\n            backdropClassName={'bg-dark'}\n\n        >\n            <Card\n                className={'p-3 text-dark bg-danger mb-0 d-flex justify-content-center align-items-center'}\n                style={{\n                    borderTopLeftRadius: borderRadius,\n                    borderTopRightRadius: borderRadius,\n                }}\n            >\n                <FontAwesomeIcon\n                    size={'6x'}\n                    className={''}\n                    icon={faTimesCircle}\n                />\n            </Card>\n            <div\n                className={'bg-primary p-2 flex-grow-1 text-center'}\n                style={{\n                    borderBottomLeftRadius: borderRadius,\n                    borderBottomRightRadius: borderRadius,\n                }}>\n                <Button\n                    className={'rounded-pill shadow'}\n                    color='primary'\n                    size={'lg'}\n                    onClick={handleClose}\n                >\n                    <FontAwesomeIcon\n                        className={'mr-2'}\n                        icon={faArrowRight}\n                    />\n                    {successModal_next}\n                </Button>\n            </div>\n        </Modal>)\n};\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/dialog-style.css';\nimport {Modal, Button, Card} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCheckCircle} from \"@fortawesome/free-regular-svg-icons\";\nimport {faArrowRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {i18n} from '../common/i18n';\nimport {pressSound, successSound} from '../common/sounds'\n\nexport interface SuccessModalProps {\n    isShow: boolean\n    onClickNext: () => void;\n}\n\n\nexport const SuccessModal: React.FC<SuccessModalProps> = ({\n                                                              isShow = true,\n                                                              onClickNext,\n                                                          }) => {\n    const handleClose = () => {\n        pressSound.play();\n        onClickNext()\n    }\n    const handleEntering = () => {\n        successSound.play();\n    }\n    const borderRadius = 20;\n    const successModal_next = i18n.t('successModal_next');\n\n    return (\n        <Modal\n            size={'sm'}\n            show={isShow}\n            onHide={handleClose}\n            onEntering={handleEntering}\n            // backdrop='static'\n            centered\n            dialogClassName={'dialog-style'}\n            keyboard={false}\n            contentClassName={'bg-transparent border-0 user-select-none'}\n            backdropClassName={'bg-dark'}\n        >\n            <Card\n                className={'p-3 text-white bg-success mb-0 d-flex justify-content-center align-items-center'}\n                style={{\n                    borderTopLeftRadius: borderRadius,\n                    borderTopRightRadius: borderRadius,\n                }}\n            >\n                <FontAwesomeIcon\n                    size={'6x'}\n                    className={''}\n                    icon={faCheckCircle}\n                />\n            </Card>\n            <div\n                className={'bg-primary p-2 flex-grow-1 text-center'}\n                style={{\n                    borderBottomLeftRadius: borderRadius,\n                    borderBottomRightRadius: borderRadius,\n                }}>\n                <Button\n                    className={'rounded-pill shadow'}\n                    color='primary'\n                    size={'lg'}\n                    onClick={handleClose}\n                >\n                    <FontAwesomeIcon\n                        className={'mr-2'}\n                        icon={faArrowRight}\n                    />\n                    {successModal_next}\n                </Button>\n            </div>\n        </Modal>)\n};\n","import React, {useRef, useState, useEffect} from 'react';\nimport '../css/bootstrap.min.css';\nimport {Question, ProblemLog} from '../@types/calcDrill'\nimport {QuestionDisplay} from './QuestionDisplay'\nimport {useSolveProblem} from './useSolveProblem'\nimport {NumberPad} from './NumberPad'\nimport {useDimension} from './useDimension'\nimport {FailModal} from './FailModal';\nimport {SuccessModal} from './SuccessModal';\n\nexport interface GameViewProps {\n    question: Question,\n    logging: (problemLog: ProblemLog) => void\n}\n\nexport const GameView: React.FC<GameViewProps> = ({\n                                                      question,\n                                                      logging = (problemLog) => {\n                                                          console.log(problemLog)\n                                                      }\n                                                  }) => {\n\n    const [isFailModalShow, setIsFailModalShow] = useState(false);\n    const [isSuccessModalShow, setIsSuccessModalShow] = useState(false);\n    const [zoom, setZoom] = useState(1);\n\n    const {currentCharacters, problemStatus, onPress, problemLog} = useSolveProblem(question);\n\n    const targetRefRoot = useRef<HTMLDivElement>(null);\n    const rootDimensions = useDimension(targetRefRoot);\n\n\n    const handleNext = () => {\n        logging(problemLog);\n    }\n\n    useEffect(() => {\n        setIsFailModalShow(false);\n        setIsSuccessModalShow(false);\n\n    }, [question]);\n\n    useEffect(() => {\n        if (problemStatus === 'fail') {\n            setIsFailModalShow(true)\n        }\n        if (problemStatus === 'success') {\n            setIsSuccessModalShow(true)\n        }\n    }, [problemStatus]);\n\n    useEffect(() => {\n        const heightRatio = (rootDimensions.height / 3 * 2) / 400;\n        const widthRatio = rootDimensions.width / 300;\n        setZoom(Math.min(heightRatio, widthRatio))\n    }, [rootDimensions])\n\n    return (\n        <div\n            className={'vh-100 vw-100 position-relative d-flex flex-column align-items-center'}\n            ref={targetRefRoot}>\n\n            {/*{problemStatus}*/}\n            {/*<span>{rootDimensions.width}</span>*/}\n            {/*<span>{rootDimensions.height}</span>*/}\n\n            <FailModal\n                isShow={isFailModalShow}\n                onClickNext={handleNext}\n            />\n\n            <SuccessModal\n                isShow={isSuccessModalShow}\n                onClickNext={handleNext}\n            />\n\n            <div\n                className={'flex-grow-1 d-flex'}\n            >\n                <QuestionDisplay\n                    size={50}\n                    characters={currentCharacters}\n                    className={\"py-3 align-self-center w-100\"}\n                />\n            </div>\n            <NumberPad\n                style={{zoom: zoom}}\n                onPress={onPress}/>\n        </div>\n    )\n};\n","import {levels} from '../levels/allLevels'\nimport {useEffect, useState} from \"react\";\nimport {ProblemLog, Question} from '../@types/calcDrill'\nimport {getCurrentCharactersAndProblemStatus} from \"./useSolveProblem\";\n\n\nfunction shuffleArray(array) {\n    for (let i = array.length; 1 < i; i--) {\n        let k = Math.floor(Math.random() * i);\n        [array[k], array[i - 1]] = [array[i - 1], array[k]];\n    }\n    return array\n}\n\nfunction createQuestions(levelID: string) {\n    const _questions = levels[levelID].questions;\n    const _questionCount = levels[levelID].questionCount;\n    const rankedQuestions = _questions.map((question) => {\n        return {question, rank: Number(localStorage[question.problem] || 0)}\n    })\n    const sortedRankedQuestions = rankedQuestions.sort((a, b) => {\n        return a.rank - b.rank\n    });\n    const sortedQuestions = sortedRankedQuestions.map((row) => {\n        return row.question\n    });\n    \n    return [...shuffleArray(sortedQuestions.splice(0, _questionCount))];\n}\n\nfunction writeGlobalReport(problemLog) {\n    const {problemStatus} = getCurrentCharactersAndProblemStatus(problemLog.question, problemLog.inputNumbers);\n    if (problemStatus === 'success') {\n        const prevCorrectCount = localStorage[problemLog.question.problem] || 0;\n        localStorage[problemLog.question.problem] = Number(prevCorrectCount) + 1;\n    }\n}\n\nexport function usePlayLevel(levelID: string) {\n    const [questions, setQuestions] = useState<Question[]>();\n    const [status, setStatus] = useState('ip');\n\n    const [currentQuestion, setCurrentQuestion] = useState<Question>();\n    const [problemLogs, setProblemLogs] = useState<ProblemLog[]>([]);\n\n    useEffect(() => {\n        const _questions = createQuestions(levelID);\n        const newQuestion = _questions.shift();\n        setCurrentQuestion(newQuestion);\n        setQuestions(_questions)\n        setProblemLogs([])\n        // eslint-disable-next-line\n    }, [])\n\n    const logging = (problemLog) => {\n        writeGlobalReport(problemLog);\n\n        setProblemLogs([...problemLogs, problemLog])\n        if (questions) {\n            const newQuestion = questions.shift();\n            if (!newQuestion) {\n                setStatus('result')\n            }\n            setCurrentQuestion(newQuestion);\n        }\n\n    }\n\n    return {\n        question: currentQuestion,\n        logging,\n        status,\n        levelRecord: {problemLogs, levelID}\n    }\n}\n","import {ProblemLog} from '../@types/calcDrill'\nimport React from 'react';\nimport {Row, Col} from \"react-bootstrap\";\nimport {QuestionDisplay} from \"./QuestionDisplay\";\nimport {getCurrentCharactersAndProblemStatus} from \"./useSolveProblem\";\nimport {i18n} from \"../common/i18n\";\n\n\nexport interface ResultListRowProps {\n    problemLog: ProblemLog\n}\n\nexport const ResultListRow: React.FC<ResultListRowProps> = ({problemLog}) => {\n    const sec = i18n.t('sec');\n    const {\n        currentCharacters,\n        problemStatus\n    } = getCurrentCharactersAndProblemStatus(problemLog.question, problemLog.inputNumbers);\n\n    const durationColor = (problemStatus === 'success') ? 'success' : 'warning';\n\n    return (\n        <Row className={'mx-0 justify-content-center user-select-none'}>\n            <Col xs={7}\n                 sm={4}\n                 className={''}>\n                <QuestionDisplay\n                    size={35}\n                    characters={currentCharacters}\n                    className={\"justify-content-end\"}\n                />\n            </Col>\n            <Col xs={5}\n                 sm={2}\n                 className={`d-flex align-items-center font-italic text-${durationColor}`}>\n                <div>\n                    <h4 className={'p-0 m-0'}>\n                        <span className={'font-weight-bold'} children={problemLog.duration / 1000}/>\n                        <span className={'ml-1'} children={sec}/>\n                    </h4>\n                </div>\n\n            </Col>\n        </Row>\n    )\n}\n","import {ProblemLog} from '../@types/calcDrill'\nimport React, {useEffect, useRef, useState} from 'react';\nimport {ResultListRow} from './ResultListRow'\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {i18n} from \"../common/i18n\";\nimport {getCurrentCharactersAndProblemStatus} from \"./useSolveProblem\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faMugHot, faThumbsUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {cheerSound, resultSound} from '../common/sounds'\nimport Confetti from 'react-confetti'\nimport {useDimension} from \"./useDimension\";\nimport {saveLevelRecordAsync, loadLevelRecordAsync} from '../common/repository'\n\nasync function evaluateLevelRecord(levelRecord) {\n    const problemLogs = levelRecord.problemLogs;\n    const totalDuration = problemLogs.reduce((acc, problemLog,) => {\n        return acc + problemLog.duration;\n    }, 0);\n    const successCount = problemLogs.filter((problemLog) => {\n        const {problemStatus} = getCurrentCharactersAndProblemStatus(problemLog.question, problemLog.inputNumbers);\n        return problemStatus === 'success'\n    }).length\n\n    const lastResult = {\n        totalCount: problemLogs.length,\n        successCount: successCount,\n        totalDuration: totalDuration,\n        timestamp: Date.now(),\n    }\n\n    const levelID = levelRecord.levelID\n\n    const isComplete = successCount === problemLogs.length;\n\n    const prevlevelRecord = await loadLevelRecordAsync(levelID);\n    const prevBestResult = prevlevelRecord.bestResult;\n\n    let isNewRecord = false;\n    if (!prevBestResult) {\n        isNewRecord = true;\n    } else if (prevBestResult.successCount < successCount) {\n        isNewRecord = true;\n    } else if (isComplete && prevBestResult.totalDuration > totalDuration) {\n        isNewRecord = true;\n    }\n\n\n    const newLevelRecord = {\n        lastResult,\n        bestResult: (isNewRecord) ? lastResult : prevlevelRecord.bestResult,\n        clearCount: prevlevelRecord.clearCount + 1,\n    }\n    // saveLevelRecord(levelID, newLevelRecord);\n    await saveLevelRecordAsync(levelID, newLevelRecord);\n\n    return {\n        totalCount: problemLogs.length,\n        successCount,\n        totalDuration,\n        timestamp: Date.now(),\n        isComplete,\n        isNewRecord\n    }\n}\n\nexport interface ResultListProps {\n    levelRecord: { problemLogs: ProblemLog[], levelID: string }\n    exitLevel: () => void\n}\n\nexport const ResultList: React.FC<ResultListProps> = ({levelRecord, exitLevel}) => {\n    const sec = i18n.t('sec');\n    const total = i18n.t('total');\n    const targetRefTail = useRef<HTMLDivElement>(null);\n    const [state, setState] = useState({successCount: 0, totalDuration: 0, isComplete: false, isNewRecord: false})\n    const {successCount, totalDuration, isComplete, isNewRecord} = state;\n\n    useEffect(() => {\n        let unmounted = false;\n        (async () => {\n            const {successCount, totalDuration, isComplete, isNewRecord} = await evaluateLevelRecord(levelRecord);\n            if (!unmounted) {\n                setState({successCount, totalDuration, isComplete, isNewRecord});\n                resultSound.play()\n                if (isComplete) {\n                    cheerSound.play()\n                }\n                if (targetRefTail && targetRefTail.current) {\n                    targetRefTail.current.scrollIntoView({behavior: \"smooth\"})\n                }\n            }\n        })();\n\n        return () => {\n            unmounted = true;\n        };\n\n        // eslint-disable-next-line\n    }, [])\n\n\n    const targetRefRoot = useRef<HTMLDivElement>(null);\n    const rootDimensions = useDimension(targetRefRoot);\n\n    return (\n        <div style={{minHeight: '100vh'}} ref={targetRefRoot}>\n            {isComplete && <Confetti\n                confettiSource={{x: 0, y: 0, w: rootDimensions.width, h: rootDimensions.height * .6}}\n                width={rootDimensions.width}\n                height={rootDimensions.height}\n                recycle={true}\n            />}\n            {levelRecord.problemLogs.map((problemLog) => {\n                return (\n                    <ResultListRow key={problemLog.question.problem} problemLog={problemLog}/>\n\n                )\n            })}\n            <hr style={{borderTopWidth: '5px'}}/>\n            <Row className={'mx-0 justify-content-center pb-4 user-select-none'}>\n                <Col xs={7}\n                     sm={4}\n                     className={'d-flex align-items-center justify-content-end'}>\n                    <h4 className={'p-0 m-0'}>\n                        <span className={'font-weight-bold'}\n                              children={`${total} ${successCount}/${levelRecord.problemLogs.length}`}/>\n                    </h4>\n                    {isComplete && !isNewRecord && <div className={'position-absolute border-danger p-2'}\n                                                        style={{\n                                                            borderStyle: \"solid\",\n                                                            borderWidth: \"5px\",\n                                                            borderRadius: \"15px\",\n                                                            right: 0,\n                                                            opacity: 0.8,\n                                                            transform: \"rotate(-15deg) translateX(15px)\"\n                                                        }}>\n                      <h2 className={'text-danger d-inline-block'}>{i18n.t('complete')}</h2>\n                    </div>}\n                    {isNewRecord && <div className={'position-absolute border-danger p-2'}\n                                         style={{\n                                             borderStyle: \"solid\",\n                                             borderWidth: \"5px\",\n                                             borderRadius: \"15px\",\n                                             right: 0,\n                                             opacity: 0.8,\n                                             transform: \"rotate(-15deg)\"\n                                         }}>\n                      <h2 className={'text-danger d-inline-block'}>{i18n.t('newRecord')}</h2>\n                    </div>}\n                </Col>\n                <Col xs={5}\n                     sm={2}\n                     className={`d-flex align-items-center font-italic`}>\n                    <div>\n                        <h4 className={'p-0 m-0'}>\n                            <span className={'font-weight-bold'} children={totalDuration / 1000}/>\n                            <span className={'ml-1'} children={sec}/>\n                        </h4>\n                    </div>\n\n                </Col>\n            </Row>\n            <Row className={'mx-0 justify-content-center pb-5'}>\n                <div ref={targetRefTail}>\n                    {!isComplete &&\n                    <Button className={'btn-success'}\n                            style={{borderRadius: \"30px\"}}\n                            onClick={exitLevel}>\n                      <FontAwesomeIcon\n                          className={'mr-2'}\n                          size={\"2x\"}\n                          icon={faMugHot}\n                      />\n                      <span className={'font-weight-bold'} style={{fontSize: \"24px\"}} children={i18n.t('goodJob')}/>\n                    </Button>}\n                    {isComplete &&\n                    <Button className={'btn-success'}\n                            style={{borderRadius: \"30px\"}}\n                            onClick={exitLevel}>\n                      <FontAwesomeIcon\n                          className={'mr-2'}\n                          size={\"2x\"}\n                          icon={faThumbsUp}\n                      />\n                      <span className={'font-weight-bold'} style={{fontSize: \"24px\"}}\n                            children={i18n.t('congratulations')}/>\n                    </Button>}\n                </div>\n            </Row>\n\n        </div>\n    )\n}\n\n\n/*\n\n */\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/dialog-style.css';\nimport {Modal, Button, Card} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\nimport {faRunning} from \"@fortawesome/free-solid-svg-icons\";\nimport {i18n} from '../common/i18n';\nimport {pressSound, openSound,hideSound} from '../common/sounds'\n\nexport interface ExitModalProps {\n    isShow: boolean\n    onClickExit: () => void;\n    onClickCancel: () => void;\n}\n\n\nexport const ExitModal: React.FC<ExitModalProps> = ({isShow = true, onClickExit, onClickCancel}) => {\n    // const [isShow, setIsShow] = useState(true);\n    const handleCancel = () => {\n        pressSound.play();\n        onClickCancel()\n    };\n    const handleExit = () => {\n        hideSound.play();\n        onClickExit()\n    };\n    const handleEntering = () => {\n        openSound.play();\n    }\n    const borderRadius = 20;\n    const exitModal_escape = i18n.t('exitModal_escape');\n    const really = i18n.t('exitModal_really');\n    const message = i18n.t('exitModal_messageB');\n    return (\n        <Modal\n            size={'sm'}\n            show={isShow}\n            onEntering={handleEntering}\n            backdrop='static'\n            centered\n            dialogClassName={'dialog-style'}\n            keyboard={false}\n            contentClassName={'bg-transparent border-0 user-select-none'}\n            backdropClassName={'bg-dark'}\n        >\n            <Card\n                className={'p-3 text-dark bg-light mb-0 d-flex justify-content-center align-items-center'}\n                style={{\n                    borderTopLeftRadius: borderRadius,\n                    borderTopRightRadius: borderRadius,\n                }}\n            >\n                <FontAwesomeIcon\n                    size={'6x'}\n                    className={''}\n                    icon={faRunning}\n                />\n                <p\n                    className={'mt-0 mb-1 h2 font-weight-bold'}\n                    children={really}\n                />\n                <p\n                    className={'mt-0 mb-0 font-italic text-left'}\n                    children={message}\n                />\n            </Card>\n            <div\n                className={'d-flex flex-row'}\n            >\n                <div\n                    className={'p-3 bg-dark d-flex justify-content-center align-items-center'}\n                    style={{\n                        borderBottomLeftRadius: borderRadius,\n                    }}>\n                    <FontAwesomeIcon\n                        className={'text-muted'}\n                        icon={faTimesCircle}\n                        size={'2x'}\n                        onClick={handleCancel}\n                    />\n                </div>\n                <div\n                    className={'bg-primary p-2 flex-grow-1 text-center'}\n                    style={{\n                        borderBottomRightRadius: borderRadius,\n                    }}>\n                    <Button\n                        className={'rounded-pill shadow'}\n                        color='primary'\n                        size={'lg'}\n                        onClick={handleExit}\n                    >\n\n                        {exitModal_escape}\n                    </Button>\n                </div>\n            </div>\n        </Modal>)\n};\n","import React, {useState} from 'react';\nimport '../css/bootstrap.min.css';\nimport {GameView} from \"./GameView\";\nimport {usePlayLevel} from './usePlayLavel'\nimport {ResultList} from \"./ResultList\";\nimport {Button} from \"react-bootstrap\";\nimport {faRunning} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {ExitModal} from './ExitModal';\n\nexport interface LevelViewProps {\n    levelID: string\n    exitLevel: () => void\n}\n\nexport const LevelView: React.FC<LevelViewProps> = ({levelID, exitLevel}) => {\n    const [isShowExistModal, setIsShowExistModal] = useState(false);\n\n    const {question, logging, status, levelRecord} = usePlayLevel(levelID);\n    // console.log(question, status, levelRecord);\n\n    const handleClickExitCancel = () => {\n        setIsShowExistModal(false)\n    }\n\n    const handleClickExit = () => {\n        setIsShowExistModal(false)\n        exitLevel();\n    }\n\n    return (\n        <div>\n            {status === \"ip\" && question &&\n            <div>\n                {isShowExistModal &&\n                <ExitModal\n                    isShow={isShowExistModal}\n                    onClickCancel={handleClickExitCancel}\n                    onClickExit={handleClickExit}\n                />}\n              <div\n                  className={'position-absolute text-right w-100'}\n                  style={{zIndex: 2}}>\n                  {/*{status}*/}\n                  <Button\n                    className={'rounded-pill shadow '}\n                    color='primary'\n                    size={'lg'}\n                    onClick={() => {\n                        setIsShowExistModal(true)\n                    }}\n                >\n                  <FontAwesomeIcon\n                      size={'2x'}\n                      className={''}\n                      icon={faRunning}\n                  />\n                </Button>\n              </div>\n              <GameView\n                  question={question}\n                  logging={logging}\n              />\n\n            </div>\n            }\n            {status === \"result\" &&\n            <ResultList levelRecord={levelRecord} exitLevel={exitLevel}/>\n            }\n\n        </div>\n    )\n\n}\n","import React from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/dialog-style.css';\nimport {Modal, Button, Card} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faThumbsUp} from \"@fortawesome/free-regular-svg-icons\";\nimport {i18n} from '../common/i18n';\nimport {openSound, pressSound} from '../common/sounds'\nexport interface ShareModalProps {\n    isShow: boolean\n    onClickNext: () => void;\n}\n\n\nexport const ShareModal: React.FC<ShareModalProps> = ({\n                                                              isShow = true,\n                                                              onClickNext,\n                                                          }) => {\n    const handleClose = () => {\n        pressSound.play();\n        onClickNext()\n    }\n    const handleEntering = () => {\n        openSound.play();\n    }\n    const borderRadius = 20;\n    const shareModal_next = i18n.t('playTogether');\n\n    return (\n        <Modal\n            size={'sm'}\n            show={isShow}\n            onHide={handleClose}\n            onEntering={handleEntering}\n            // backdrop='static'\n            centered\n            dialogClassName={'dialog-style'}\n            keyboard={false}\n            contentClassName={'bg-transparent border-0 user-select-none'}\n            backdropClassName={'bg-dark'}\n        >\n            <Card\n                className={'p-3 text-white bg-primary mb-0 d-flex justify-content-center align-items-center'}\n                style={{\n                    borderTopLeftRadius: borderRadius,\n                    borderTopRightRadius: borderRadius,\n                }}\n            >\n                <img alt={'url'} src={`${process.env.PUBLIC_URL}/QR_code.png`} />\n            </Card>\n            <div\n                className={'bg-primary p-2 flex-grow-1 text-center'}\n                style={{\n                    borderBottomLeftRadius: borderRadius,\n                    borderBottomRightRadius: borderRadius,\n                }}>\n                <Button\n                    className={'rounded-pill shadow'}\n                    color='primary'\n                    size={'lg'}\n                    onClick={handleClose}\n                >\n                    <FontAwesomeIcon\n                        className={'mr-2'}\n                        icon={faThumbsUp}\n                    />\n                    {shareModal_next}\n                </Button>\n            </div>\n        </Modal>)\n};\n","import React, {useState} from 'react';\n\nimport '../css/hidden-scrollbar.css'\nimport {MenuList} from './MenuList'\nimport {LevelView} from './LevelView'\nimport {faQrcode} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {ShareModal} from \"./ShareModal\";\n\nexport const App: React.FC = () => {\n    const [playingLevelID, setPlayingLevelID] = useState<string | null>(null);\n\n    const [isShowShareModal, setIsShowShareModal] = useState(false);\n\n    const handleExitLevel = () => {\n        setPlayingLevelID(null);\n    }\n    const handleStartLevel = (levelID) => {\n        setPlayingLevelID(levelID);\n    }\n\n    const handleShowShareModal = () => {\n        setIsShowShareModal(true);\n    }\n\n    const handleHideShareModal = () => {\n        setIsShowShareModal(false);\n    }\n\n    return (\n        <div className={'h-100 w-100'}>\n            <ShareModal\n                isShow={isShowShareModal}\n                onClickNext={handleHideShareModal}\n            />\n            {!playingLevelID &&\n            <div>\n              <FontAwesomeIcon\n                  className={'mr-3 mt-2 float-right text-muted user-select-none'}\n                  size={\"2x\"}\n                  icon={faQrcode}\n                  onClick={handleShowShareModal}\n              />\n              <h2 className={'text-center user-select-none'}>Calc Drill</h2>\n              <MenuList\n                  startLevel={handleStartLevel}\n              /></div>}\n            {playingLevelID &&\n            <LevelView\n                exitLevel={handleExitLevel}\n                levelID={playingLevelID}\n            />}\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport {App} from './compornents/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}